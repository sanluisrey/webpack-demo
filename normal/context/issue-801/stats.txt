PublicPath: (none)
asset bundle.js 5.96 KiB {0} [emitted] (name: main)
Entrypoint main 5.96 KiB = bundle.js
chunk {0} (runtime: main) bundle.js (main) 1.31 KiB (javascript) 88 bytes (runtime) [entry] [rendered]
  > ./context/issue-801/ main
  dependent modules 916 bytes [dependent]
    modules by path ./context/issue-801/folder/ sync ^/.// 359 bytes
      ./context/issue-801/folder/ sync ^\.\/.*$ [4] 185 bytes {0} [depth 2] [optional] [dependent] [built] [code generated]
        [no exports]
        cjs require context [0] ./context/issue-801/folder/file.js 12:10-29
      ./context/issue-801/folder/ sync ^\.\/.*\.js$ [3] 174 bytes {0} [depth 2] [optional] [dependent] [built] [code generated]
        [no exports]
        cjs require context [0] ./context/issue-801/folder/file.js 9:10-37
    ./context/issue-801/folder/ sync ^.*\.js$ [1] 174 bytes {0} [depth 2] [optional] [dependent] [built] [code generated]
      [no exports]
      cjs require context [0] ./context/issue-801/folder/file.js 3:10-30
      cjs require context [0] ./context/issue-801/folder/file.js 6:10-35
    ./context/issue-801/folder/file.js [0] 383 bytes {0} [depth 1] [dependent] [built] [code generated]
      [used exports unknown]
      CommonJS bailout: module.exports is used directly at 1:0-14
      Statement (ExpressionStatement) with side effects in source code at 1:0-15:2
      from origin ./context/issue-801/folder/ sync ^\.\/.*$
        context element ./file [4] ./context/issue-801/folder/ sync ^\.\/.*$ ./file
        context element ./file.js [4] ./context/issue-801/folder/ sync ^\.\/.*$ ./file.js
      cjs self exports reference [0] ./context/issue-801/folder/file.js 1:0-14
      context element ./file.js [1] ./context/issue-801/folder/ sync ^.*\.js$ ./file.js
      context element ./file.js [3] ./context/issue-801/folder/ sync ^\.\/.*\.js$ ./file.js
      cjs require ./folder/file [2] ./context/issue-801/index.js 2:12-36
  ./context/issue-801/index.js [2] 426 bytes {0} [depth 0] [built] [code generated]
    [no exports used]
    Statement (ExpressionStatement) with side effects in source code at 1:0-7:3
    entry ./context/issue-801/ main
  webpack/runtime/hasOwnProperty shorthand 88 bytes {0} [code generated]
    [no exports]
    [used exports unknown]
modules by path ./context/issue-801/folder/ 916 bytes
  modules by path ./context/issue-801/folder/ sync ^/.// 359 bytes
    ./context/issue-801/folder/ sync ^\.\/.*\.js$ [3] 174 bytes {0} [depth 2] [optional] [built] [code generated]
      [no exports]
      cjs require context [0] ./context/issue-801/folder/file.js 9:10-37
    ./context/issue-801/folder/ sync ^\.\/.*$ [4] 185 bytes {0} [depth 2] [optional] [built] [code generated]
      [no exports]
      cjs require context [0] ./context/issue-801/folder/file.js 12:10-29
  ./context/issue-801/folder/file.js [0] 383 bytes {0} [depth 1] [built] [code generated]
    [used exports unknown]
    CommonJS bailout: module.exports is used directly at 1:0-14
    Statement (ExpressionStatement) with side effects in source code at 1:0-15:2
    from origin ./context/issue-801/folder/ sync ^\.\/.*$
      context element ./file [4] ./context/issue-801/folder/ sync ^\.\/.*$ ./file
      context element ./file.js [4] ./context/issue-801/folder/ sync ^\.\/.*$ ./file.js
    cjs self exports reference [0] ./context/issue-801/folder/file.js 1:0-14
    context element ./file.js [1] ./context/issue-801/folder/ sync ^.*\.js$ ./file.js
    context element ./file.js [3] ./context/issue-801/folder/ sync ^\.\/.*\.js$ ./file.js
    cjs require ./folder/file [2] ./context/issue-801/index.js 2:12-36
  ./context/issue-801/folder/ sync ^.*\.js$ [1] 174 bytes {0} [depth 2] [optional] [built] [code generated]
    [no exports]
    cjs require context [0] ./context/issue-801/folder/file.js 3:10-30
    cjs require context [0] ./context/issue-801/folder/file.js 6:10-35
./context/issue-801/index.js [2] 426 bytes {0} [depth 0] [built] [code generated]
  [no exports used]
  Statement (ExpressionStatement) with side effects in source code at 1:0-7:3
  entry ./context/issue-801/ main
webpack/runtime/hasOwnProperty shorthand 88 bytes {0} [code generated]
  [no exports]
  [used exports unknown]
  

LOG from webpack.Compiler
<t> make hook: 34.499396 ms
<t> finish make hook: 0.014531 ms
<t> finish compilation: 0.125965 ms
<t> seal compilation: 3.084837 ms
<t> afterCompile hook: 0.008699 ms
<t> emitAssets: 3.745976 ms
<t> emitRecords: 0.002814 ms
<t> done hook: 0.011361 ms
<t> beginIdle: 0.008252 ms

LOG from webpack.Compilation
<t> compute affected modules: 0.004639 ms
<t> finish modules: 0.087533 ms
<t> report dependency errors and warnings: 0.017197 ms
<t> optimize dependencies: 0.184497 ms
<t> create chunks: 0.280567 ms
<t> compute affected modules with chunk graph: 0.003496 ms
<t> optimize: 0.546367 ms
    5 modules hashed, 0 from cache (1 variants per module in average)
<t> module hashing: 0.205928 ms
    100% code generated (5 generated, 0 from cache)
<t> code generation: 0.30831 ms
<t> runtime requirements.modules: 0.025731 ms
<t> runtime requirements.chunks: 0.050982 ms
<t> runtime requirements.entries: 0.109437 ms
<t> runtime requirements: 0.282117 ms
<t> hashing: initialize hash: 0.003533 ms
<t> hashing: sort chunks: 0.01507 ms
<t> hashing: hash runtime modules: 0.052564 ms
<t> hashing: hash chunks: 0.213821 ms
<t> hashing: hash digest: 0.011523 ms
<t> hashing: process full hash modules: 0.001285 ms
<t> hashing: 0.332026 ms
    100% code generated (1 generated, 0 from cache)
<t> record hash: 0.006019 ms
<t> module assets: 0.011104 ms
<t> create chunk assets: 0.650286 ms
<t> process assets: 0.03367 ms

LOG from webpack.FlagDependencyExportsPlugin
<t> restore cached provided exports: 0.019054 ms
<t> figure out provided exports: 0.013903 ms
    60% of exports of modules have been determined (2 no declared exports, 0 not cached, 3 flagged uncacheable, 0 from cache, 0 from mem cache, 0 additional calculations due to dependencies)
<t> store provided exports into cache: 0.003849 ms

LOG from webpack.SideEffectsFlagPlugin
<t> update dependencies: 0.003776 ms

LOG from webpack.FlagDependencyUsagePlugin
<t> initialize exports usage: 0.006756 ms
<t> trace exports usage in graph: 0.120903 ms

LOG from webpack.buildChunkGraph
<t> visitModules: prepare: 0.026653 ms
<t> visitModules: visiting: 0.076734 ms
    10 queue items processed (5 blocks)
    0 chunk groups connected
    0 chunk groups processed for merging (0 module sets, 0 forked, 0 + 0 modules forked, 0 + 0 modules merged into fork, 0 resulting modules)
    0 chunk group info updated (0 already connected chunk groups reconnected)
<t> visitModules: 0.102698 ms
<t> connectChunkGroups: 0.002018 ms
<t> cleanup: 0.001758 ms

LOG from webpack.SplitChunksPlugin
<t> prepare: 0.016196 ms
<t> modules: 0.076685 ms
<t> queue: 0.002659 ms
<t> maxSize: 0.005778 ms

LOG from webpack.FileSystemInfo
    5 new snapshots created
    0% root snapshot uncached (0 / 0)
    0% children snapshot uncached (0 / 0)
    0 entries tested
    File info in cache: 2 timestamps 0 hashes 0 timestamp hash combinations
    File timestamp snapshot optimization: 0% (0/2) entries shared via 0 shared snapshots (0 times referenced)
    Directory info in cache: 1 timestamps 0 hashes 0 timestamp hash combinations
    Directory timestamp snapshot optimization: 0% (0/3) entries shared via 0 shared snapshots (0 times referenced)
    Managed items info in cache: 0 items

2021-12-05 17:44:23: webpack 5.64.4 compiled successfully in 44 ms (5f2a6a6894b7f5e57c2b)