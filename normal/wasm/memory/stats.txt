PublicPath: (none)
assets by path *.wasm 209 bytes
  asset 3b4e58d2d5e88a9f31ac.module.wasm 86 bytes ({0}) [emitted] [immutable]
  asset d995c2196f7d5ae04f7a.module.wasm 86 bytes ({0}) [emitted] [immutable]
  asset 4f9c86ec27c1f26c73ae.module.wasm 37 bytes ({0}) [emitted] [immutable]
assets by path *.js 15.8 KiB
  asset bundle.js 10.6 KiB {1} [emitted] (name: main)
  asset 0.bundle.js 5.2 KiB {0} [emitted]
Entrypoint main 10.6 KiB = bundle.js
chunk {0} (runtime: main) 0.bundle.js 391 bytes (javascript) 209 bytes (webassembly) <{1}> [rendered]
  > ./run [0] ./wasm/memory/index.js 2:8-23
  ./wasm/memory/mem-access.wat?1 [3] 60 bytes (javascript) 86 bytes (webassembly) {0} [depth 2] [dependent] [built] [code generated]
    [exports: get, set]
    [all exports used]
    harmony side effect evaluation ./mem-access.wat?1 [1] ./wasm/memory/run.js 1:0-41
    harmony import specifier ./mem-access.wat?1 [1] ./wasm/memory/run.js 4:0-6
    harmony import specifier ./mem-access.wat?1 [1] ./wasm/memory/run.js 5:18-24
    harmony import specifier ./mem-access.wat?1 [1] ./wasm/memory/run.js 8:18-24
  ./wasm/memory/mem-access.wat?2 [4] 60 bytes (javascript) 86 bytes (webassembly) {0} [depth 2] [dependent] [built] [code generated]
    [exports: get, set]
    [all exports used]
    harmony side effect evaluation ./mem-access.wat?2 [1] ./wasm/memory/run.js 2:0-41
    harmony import specifier ./mem-access.wat?2 [1] ./wasm/memory/run.js 6:18-24
    harmony import specifier ./mem-access.wat?2 [1] ./wasm/memory/run.js 7:0-6
    harmony import specifier ./mem-access.wat?2 [1] ./wasm/memory/run.js 9:18-24
  ./wasm/memory/memory.wat [2] 50 bytes (javascript) 37 bytes (webassembly) {0} [depth 3] [dependent] [built] [code generated]
    [exports: memory]
    [all exports used]
    wasm import ./memory.wat [3] ./wasm/memory/mem-access.wat?1
    wasm import ./memory.wat [4] ./wasm/memory/mem-access.wat?2
  ./wasm/memory/run.js [1] 221 bytes {0} [depth 1] [built] [code generated]
    [exports: x1, x2, y1, y2]
    Statement (ExpressionStatement) with side effects in source code at 4:0-11
    import() ./run [0] ./wasm/memory/index.js 2:8-23
chunk {1} (runtime: main) bundle.js (main) 255 bytes (javascript) 5.79 KiB (runtime) >{0}< [entry] [rendered]
  > ./wasm/memory/ main
  ./wasm/memory/index.js [0] 255 bytes {1} [depth 0] [built] [code generated]
    [no exports used]
    Statement (ExpressionStatement) with side effects in source code at 1:0-8:3
    entry ./wasm/memory/ main
  webpack/runtime/async module 2.16 KiB {1} [code generated]
    [no exports]
    [used exports unknown]
  webpack/runtime/define property getters 308 bytes {1} [code generated]
    [no exports]
    [used exports unknown]
  webpack/runtime/ensure chunk 326 bytes {1} [code generated]
    [no exports]
    [used exports unknown]
  webpack/runtime/get javascript chunk filename 174 bytes {1} [code generated]
    [no exports]
    [used exports unknown]
  webpack/runtime/hasOwnProperty shorthand 88 bytes {1} [code generated]
    [no exports]
    [used exports unknown]
  webpack/runtime/make namespace object 274 bytes {1} [code generated]
    [no exports]
    [used exports unknown]
  webpack/runtime/publicPath 27 bytes {1} [code generated]
    [no exports]
    [used exports unknown]
  webpack/runtime/readFile chunk loading 1.79 KiB {1} [code generated]
    [no exports]
    [used exports unknown]
  webpack/runtime/wasm loading 690 bytes {1} [code generated]
    [no exports]
    [used exports unknown]
runtime modules 5.79 KiB
  webpack/runtime/async module 2.16 KiB {1} [code generated]
    [no exports]
    [used exports unknown]
  webpack/runtime/define property getters 308 bytes {1} [code generated]
    [no exports]
    [used exports unknown]
  webpack/runtime/ensure chunk 326 bytes {1} [code generated]
    [no exports]
    [used exports unknown]
  webpack/runtime/get javascript chunk filename 174 bytes {1} [code generated]
    [no exports]
    [used exports unknown]
  webpack/runtime/hasOwnProperty shorthand 88 bytes {1} [code generated]
    [no exports]
    [used exports unknown]
  webpack/runtime/make namespace object 274 bytes {1} [code generated]
    [no exports]
    [used exports unknown]
  webpack/runtime/publicPath 27 bytes {1} [code generated]
    [no exports]
    [used exports unknown]
  webpack/runtime/readFile chunk loading 1.79 KiB {1} [code generated]
    [no exports]
    [used exports unknown]
  webpack/runtime/wasm loading 690 bytes {1} [code generated]
    [no exports]
    [used exports unknown]
cacheable modules 646 bytes (javascript) 209 bytes (webassembly)
  webassembly modules 170 bytes (javascript) 209 bytes (webassembly)
    ./wasm/memory/mem-access.wat?1 [3] 60 bytes (javascript) 86 bytes (webassembly) {0} [depth 2] [built] [code generated]
      [exports: get, set]
      [all exports used]
      harmony side effect evaluation ./mem-access.wat?1 [1] ./wasm/memory/run.js 1:0-41
      harmony import specifier ./mem-access.wat?1 [1] ./wasm/memory/run.js 4:0-6
      harmony import specifier ./mem-access.wat?1 [1] ./wasm/memory/run.js 5:18-24
      harmony import specifier ./mem-access.wat?1 [1] ./wasm/memory/run.js 8:18-24
    ./wasm/memory/mem-access.wat?2 [4] 60 bytes (javascript) 86 bytes (webassembly) {0} [depth 2] [built] [code generated]
      [exports: get, set]
      [all exports used]
      harmony side effect evaluation ./mem-access.wat?2 [1] ./wasm/memory/run.js 2:0-41
      harmony import specifier ./mem-access.wat?2 [1] ./wasm/memory/run.js 6:18-24
      harmony import specifier ./mem-access.wat?2 [1] ./wasm/memory/run.js 7:0-6
      harmony import specifier ./mem-access.wat?2 [1] ./wasm/memory/run.js 9:18-24
    ./wasm/memory/memory.wat [2] 50 bytes (javascript) 37 bytes (webassembly) {0} [depth 3] [built] [code generated]
      [exports: memory]
      [all exports used]
      wasm import ./memory.wat [3] ./wasm/memory/mem-access.wat?1
      wasm import ./memory.wat [4] ./wasm/memory/mem-access.wat?2
  javascript modules 476 bytes
    ./wasm/memory/index.js [0] 255 bytes {1} [depth 0] [built] [code generated]
      [no exports used]
      Statement (ExpressionStatement) with side effects in source code at 1:0-8:3
      entry ./wasm/memory/ main
    ./wasm/memory/run.js [1] 221 bytes {0} [depth 1] [built] [code generated]
      [exports: x1, x2, y1, y2]
      Statement (ExpressionStatement) with side effects in source code at 4:0-11
      import() ./run [0] ./wasm/memory/index.js 2:8-23
  

LOG from webpack.Compiler
<t> make hook: 32.215071 ms
<t> finish make hook: 0.01054 ms
<t> finish compilation: 0.230865 ms
<t> seal compilation: 3.656556 ms
<t> afterCompile hook: 0.00696 ms
<t> emitAssets: 1.297285 ms
<t> emitRecords: 0.001844 ms
<t> done hook: 0.010336 ms
<t> beginIdle: 0.004589 ms

LOG from webpack.Compilation
<t> compute affected modules: 0.003904 ms
<t> finish modules: 0.168758 ms
<t> report dependency errors and warnings: 0.04624 ms
<t> optimize dependencies: 0.169373 ms
<t> create chunks: 0.20552 ms
<t> compute affected modules with chunk graph: 0.001452 ms
<t> optimize: 0.434606 ms
    5 modules hashed, 0 from cache (1 variants per module in average)
<t> module hashing: 0.17062 ms
    100% code generated (5 generated, 0 from cache)
<t> code generation: 0.545722 ms
<t> runtime requirements.modules: 0.063801 ms
<t> runtime requirements.chunks: 0.057298 ms
<t> runtime requirements.entries: 0.31067 ms
<t> runtime requirements: 0.450371 ms
<t> hashing: initialize hash: 0.002208 ms
<t> hashing: sort chunks: 0.01338 ms
<t> hashing: hash runtime modules: 0.550173 ms
<t> hashing: hash chunks: 0.241326 ms
<t> hashing: hash digest: 0.010049 ms
<t> hashing: process full hash modules: 0.001024 ms
<t> hashing: 0.848651 ms
    100% code generated (9 generated, 0 from cache)
<t> record hash: 0.006695 ms
<t> module assets: 0.010822 ms
<t> create chunk assets: 0.559583 ms
<t> process assets: 0.037154 ms

LOG from webpack.FlagDependencyExportsPlugin
<t> restore cached provided exports: 0.023176 ms
<t> figure out provided exports: 0.057883 ms
    80% of exports of modules have been determined (1 no declared exports, 4 not cached, 0 flagged uncacheable, 0 from cache, 0 from mem cache, 0 additional calculations due to dependencies)
<t> store provided exports into cache: 0.018365 ms

LOG from webpack.SideEffectsFlagPlugin
<t> update dependencies: 0.003602 ms

LOG from webpack.FlagDependencyUsagePlugin
<t> initialize exports usage: 0.004293 ms
<t> trace exports usage in graph: 0.127743 ms

LOG from webpack.buildChunkGraph
<t> visitModules: prepare: 0.004911 ms
<t> visitModules: visiting: 0.042729 ms
<t> visitModules: calculating available modules: 0.00813 ms
<t> visitModules: merging available modules: 0.004536 ms
<t> visitModules: check modules for revisit: 0.002589 ms
<t> visitModules: prepare: 0.011196 ms
<t> visitModules: visiting: 0.044547 ms
    11 queue items processed (6 blocks)
    1 chunk groups connected
    1 chunk groups processed for merging (1 module sets, 0 forked, 0 + 0 modules forked, 0 + 0 modules merged into fork, 0 resulting modules)
    1 chunk group info updated (0 already connected chunk groups reconnected)
<t> visitModules: 0.130181 ms
<t> connectChunkGroups: 0.008912 ms
<t> cleanup: 0.001494 ms

LOG from webpack.SplitChunksPlugin
<t> prepare: 0.015891 ms
<t> modules: 0.069673 ms
<t> queue: 0.002454 ms
<t> maxSize: 0.008479 ms

LOG from webpack.FileSystemInfo
    5 new snapshots created
    0% root snapshot uncached (0 / 0)
    0% children snapshot uncached (0 / 0)
    0 entries tested
    File info in cache: 4 timestamps 0 hashes 0 timestamp hash combinations
    File timestamp snapshot optimization: 0% (0/5) entries shared via 0 shared snapshots (0 times referenced)
    Directory info in cache: 0 timestamps 0 hashes 0 timestamp hash combinations
    Managed items info in cache: 0 items

2021-12-05 17:45:44: webpack 5.64.4 compiled successfully in 39 ms (72498a02c53eb90f6bd6)