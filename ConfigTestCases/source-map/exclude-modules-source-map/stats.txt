PublicPath: (none)
asset bundle0.js 3.73 KiB {142} [emitted] (name: bundle0)
asset bundle1.js 2.65 KiB {71} [emitted] (name: bundle1)
Entrypoint bundle0 3.73 KiB = bundle0.js
Entrypoint bundle1 2.65 KiB = bundle1.js
chunk {71} (runtime: bundle1) bundle1.js (bundle1) 106 bytes [entry] [rendered]
  > ./test1.js bundle1
  > ./test2.js bundle1
  ./test1.js [770] 53 bytes {71} [depth 0] [built] [code generated]
    [used exports unknown]
    CommonJS bailout: module.exports is used directly at 3:0-14
    Statement (VariableDeclaration) with side effects in source code at 1:0-21
    ModuleConcatenation bailout: Module is not an ECMAScript module
    cjs self exports reference [770] ./test1.js 3:0-14
    entry ./test1.js bundle1
  ./test2.js [768] 53 bytes {71} [depth 0] [built] [code generated]
    [used exports unknown]
    CommonJS bailout: module.exports is used directly at 3:0-14
    Statement (VariableDeclaration) with side effects in source code at 1:0-21
    ModuleConcatenation bailout: Module is not an ECMAScript module
    cjs self exports reference [768] ./test2.js 3:0-14
    entry ./test2.js bundle1
chunk {142} (runtime: bundle0) bundle0.js (bundle0) 460 bytes [entry] [rendered]
  > ./index.js bundle0
  ./index.js [10] 376 bytes {142} [depth 0] [built] [code generated]
    [no exports used]
    Statement (ExpressionStatement) with side effects in source code at 1:0-8:3
    ModuleConcatenation bailout: Module is not an ECMAScript module
    entry ./index.js bundle0
  external "fs" [147] 42 bytes {142} [depth 1] [dependent] [built] [code generated]
    ModuleConcatenation bailout: List of module exports is dynamic (other exports: maybe provided (runtime-defined) and maybe used in bundle0 (runtime-defined))
    cjs require fs [10] ./index.js 2:10-23
  external "path" [17] 42 bytes {142} [depth 1] [dependent] [built] [code generated]
    ModuleConcatenation bailout: List of module exports is dynamic (other exports: maybe provided (runtime-defined) and maybe used in bundle0 (runtime-defined))
    cjs require path [10] ./index.js 3:12-27
  

LOG from webpack.Compiler
<t> make hook: 10.007542 ms
<t> finish make hook: 0.042137 ms
<t> finish compilation: 0.142284 ms
<t> seal compilation: 5.303599 ms
<t> afterCompile hook: 0.011293 ms
<t> emitAssets: 1.261929 ms
<t> emitRecords: 0.002558 ms
<t> done hook: 0.012652 ms
<t> beginIdle: 0.007579 ms

LOG from webpack.Compilation
<t> compute affected modules: 0.003928 ms
<t> finish modules: 0.111939 ms
<t> report dependency errors and warnings: 0.013685 ms
<t> optimize dependencies: 0.174399 ms
<t> create chunks: 0.153814 ms
<t> compute affected modules with chunk graph: 0.001704 ms
<t> optimize: 0.591506 ms
    5 modules hashed, 0 from cache (1 variants per module in average)
<t> module hashing: 0.215683 ms
    100% code generated (5 generated, 0 from cache)
<t> code generation: 0.197064 ms
<t> runtime requirements.modules: 0.031194 ms
<t> runtime requirements.chunks: 0.0506 ms
<t> runtime requirements.entries: 0.091308 ms
<t> runtime requirements: 0.198792 ms
<t> hashing: initialize hash: 0.004474 ms
<t> hashing: sort chunks: 0.026 ms
<t> hashing: hash runtime modules: 0.008639 ms
<t> hashing: hash chunks: 0.546539 ms
<t> hashing: hash digest: 0.018247 ms
<t> hashing: process full hash modules: 0.001512 ms
<t> hashing: 0.666531 ms
    NaN% code generated (0 generated, 0 from cache)
<t> record hash: 0.020507 ms
<t> module assets: 0.014603 ms
<t> create chunk assets: 2.658436 ms
<t> process assets: 0.188268 ms

LOG from webpack.FlagDependencyExportsPlugin
<t> restore cached provided exports: 0.018709 ms
<t> figure out provided exports: 0.019819 ms
    40% of exports of modules have been determined (3 no declared exports, 0 not cached, 2 flagged uncacheable, 0 from cache, 0 from mem cache, 0 additional calculations due to dependencies)
<t> store provided exports into cache: 0.003854 ms

LOG from webpack.InnerGraphPlugin
<t> infer dependency usage: 0.008588 ms

LOG from webpack.SideEffectsFlagPlugin
<t> update dependencies: 0.005595 ms

LOG from webpack.FlagDependencyUsagePlugin
<t> initialize exports usage: 0.004087 ms
<t> trace exports usage in graph: 0.130355 ms

LOG from webpack.buildChunkGraph
<t> visitModules: prepare: 0.01059 ms
<t> visitModules: visiting: 0.050068 ms
    10 queue items processed (5 blocks)
    0 chunk groups connected
    0 chunk groups processed for merging (0 module sets, 0 forked, 0 + 0 modules forked, 0 + 0 modules merged into fork, 0 resulting modules)
    0 chunk group info updated (0 already connected chunk groups reconnected)
<t> visitModules: 0.073353 ms
<t> connectChunkGroups: 0.001858 ms
<t> cleanup: 0.001502 ms

LOG from webpack.SplitChunksPlugin
<t> prepare: 0.015234 ms
<t> modules: 0.062842 ms
<t> queue: 0.001705 ms
<t> maxSize: 0.005161 ms

LOG from webpack.ModuleConcatenationPlugin
<t> select relevant modules: 0.045 ms
<t> sort relevant modules: 0.000682 ms
<t> find modules to concatenate: 0.00155 ms
<t> sort concat configurations: 0.000657 ms
<t> create concatenated modules: 0.003002 ms
+ 3 hidden lines

LOG from webpack.FileSystemInfo
    3 new snapshots created
    0% root snapshot uncached (0 / 0)
    0% children snapshot uncached (0 / 0)
    0 entries tested
    File info in cache: 3 timestamps 3 hashes 3 timestamp hash combinations
    File timestamp hash combination snapshot optimization: 0% (0/3) entries shared via 0 shared snapshots (0 times referenced)
    Directory info in cache: 0 timestamps 0 hashes 0 timestamp hash combinations
    Managed items info in cache: 0 items

2021-12-05 17:44:56: webpack 5.64.4 compiled successfully in 18 ms (c15323f14c5082ddb93e)