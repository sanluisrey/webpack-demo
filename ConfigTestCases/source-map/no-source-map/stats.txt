PublicPath: (none)
asset bundle0.js 7.18 KiB {main} [emitted] (name: main)
asset chunk_js.bundle0.js 550 bytes {chunk_js} [emitted]
Entrypoint main 7.18 KiB = bundle0.js
chunk {chunk_js} (runtime: main) chunk_js.bundle0.js 19 bytes <{main}> [rendered]
  > ./chunk [./index.js] ./index.js 3:33-50
  ./chunk.js 19 bytes {chunk_js} [depth 1] [built] [code generated]
    [exports: default]
    [used exports unknown]
    import() ./chunk [./index.js] 3:33-50
chunk {main} (runtime: main) bundle0.js (main) 168 bytes (javascript) 3.2 KiB (runtime) >{chunk_js}< [entry] [rendered]
  > ./index.js main
  runtime modules 3.2 KiB
    webpack/runtime/compat get default export 267 bytes {main} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/define property getters 308 bytes {main} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/ensure chunk 326 bytes {main} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/get javascript chunk filename 175 bytes {main} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/hasOwnProperty shorthand 88 bytes {main} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/make namespace object 274 bytes {main} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/readFile chunk loading 1.8 KiB {main} [code generated]
      [no exports]
      [used exports unknown]
  cacheable modules 168 bytes
    ./index.js 146 bytes {main} [depth 0] [built] [code generated]
      [no exports]
      [used exports unknown]
      entry ./index.js main
    ./loader.js! 22 bytes {main} [depth 1] [dependent] [built] [code generated]
      [used exports unknown]
      CommonJS bailout: module.exports is used directly at 1:0-14
      harmony side effect evaluation ./loader! [./index.js] 1:0-27
      harmony import specifier ./loader! [./index.js] 5:8-10
      cjs self exports reference [./loader.js!] 1:0-14
  

LOG from webpack.Compiler
<t> make hook: 121.471114 ms
<t> finish make hook: 0.013056 ms
<t> finish compilation: 0.177828 ms
<t> seal compilation: 3.214538 ms
<t> afterCompile hook: 0.008037 ms
<t> emitAssets: 1.751531 ms
<t> emitRecords: 0.000562 ms
<t> done hook: 0.01347 ms
<t> beginIdle: 0.003113 ms

LOG from webpack.Compilation
<t> compute affected modules: 0.003863 ms
<t> finish modules: 0.130501 ms
<t> report dependency errors and warnings: 0.028216 ms
<t> optimize dependencies: 0.025595 ms
<t> create chunks: 0.226206 ms
<t> compute affected modules with chunk graph: 0.001469 ms
<t> optimize: 0.38822 ms
    3 modules hashed, 0 from cache (1 variants per module in average)
<t> module hashing: 0.175587 ms
    100% code generated (3 generated, 0 from cache)
<t> code generation: 0.282673 ms
<t> runtime requirements.modules: 0.071833 ms
<t> runtime requirements.chunks: 0.058696 ms
<t> runtime requirements.entries: 0.311365 ms
<t> runtime requirements: 0.461939 ms
<t> hashing: initialize hash: 0.004079 ms
<t> hashing: sort chunks: 0.012298 ms
<t> hashing: hash runtime modules: 0.581649 ms
<t> hashing: hash chunks: 0.256795 ms
<t> hashing: hash digest: 0.012028 ms
<t> hashing: process full hash modules: 0.001069 ms
<t> hashing: 0.911512 ms
    100% code generated (7 generated, 0 from cache)
<t> record hash: 0.008114 ms
<t> module assets: 0.012992 ms
<t> create chunk assets: 0.407052 ms
<t> process assets: 0.044936 ms

LOG from webpack.ResolverCachePlugin
    100% really resolved (3 real resolves with 0 cached but invalid, 0 cached valid, 0 concurrent)

LOG from webpack.FlagDependencyExportsPlugin
<t> restore cached provided exports: 0.029024 ms
<t> figure out provided exports: 0.033569 ms
    67% of exports of modules have been determined (1 no declared exports, 2 not cached, 0 flagged uncacheable, 0 from cache, 0 from mem cache, 0 additional calculations due to dependencies)
<t> store provided exports into cache: 0.016148 ms

LOG from webpack.SideEffectsFlagPlugin
<t> update dependencies: 0.004723 ms

LOG from webpack.buildChunkGraph
<t> visitModules: prepare: 0.010324 ms
<t> visitModules: visiting: 0.066142 ms
<t> visitModules: calculating available modules: 0.013481 ms
<t> visitModules: merging available modules: 0.004383 ms
<t> visitModules: check modules for revisit: 0.003039 ms
<t> visitModules: prepare: 0.001092 ms
<t> visitModules: visiting: 0.014497 ms
    7 queue items processed (4 blocks)
    1 chunk groups connected
    1 chunk groups processed for merging (1 module sets, 0 forked, 0 + 0 modules forked, 0 + 0 modules merged into fork, 0 resulting modules)
    1 chunk group info updated (0 already connected chunk groups reconnected)
<t> visitModules: 0.132234 ms
<t> connectChunkGroups: 0.011957 ms
<t> cleanup: 0.002442 ms

LOG from webpack.SplitChunksPlugin
<t> prepare: 0.017323 ms
<t> modules: 0.048998 ms
<t> queue: 0.002229 ms
<t> maxSize: 0.009301 ms

LOG from webpack.FileSystemInfo
    6 new snapshots created
    0% root snapshot uncached (0 / 0)
    0% children snapshot uncached (0 / 0)
    0 entries tested
    File info in cache: 20 timestamps 0 hashes 0 timestamp hash combinations
    File timestamp snapshot optimization: 87% (33/38) entries shared via 1 shared snapshots (2 times referenced)
    Directory info in cache: 0 timestamps 0 hashes 0 timestamp hash combinations
    Missing items snapshot optimization: 86% (12/14) entries shared via 1 shared snapshots (2 times referenced)
    Managed items info in cache: 0 items

2021-12-05 17:44:57: webpack 5.64.4 compiled successfully in 129 ms (f0d531e16c0be96e97ab)

PublicPath: (none)
asset bundle1.js 7.09 KiB {179} [emitted] (name: main)
asset 52.bundle1.js 524 bytes {52} [emitted]
Entrypoint main 7.09 KiB = bundle1.js
chunk {52} (runtime: main) 52.bundle1.js 19 bytes <{179}> [rendered]
  > ./chunk [10] ./index.js 3:33-50
  ./chunk.js [52] 19 bytes {52} [depth 1] [built] [code generated]
    [exports: default]
    import() ./chunk [10] ./index.js 3:33-50
chunk {179} (runtime: main) bundle1.js (main) 168 bytes (javascript) 3.2 KiB (runtime) >{52}< [entry] [rendered]
  > ./index.js main
  runtime modules 3.2 KiB
    webpack/runtime/compat get default export 267 bytes {179} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/define property getters 308 bytes {179} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/ensure chunk 326 bytes {179} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/get javascript chunk filename 175 bytes {179} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/hasOwnProperty shorthand 88 bytes {179} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/make namespace object 274 bytes {179} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/readFile chunk loading 1.8 KiB {179} [code generated]
      [no exports]
      [used exports unknown]
  cacheable modules 168 bytes
    ./index.js [10] 146 bytes {179} [depth 0] [built] [code generated]
      [no exports]
      [no exports used]
      Statement (ExpressionStatement) with side effects in source code at 3:0-52
      ModuleConcatenation bailout: Cannot concat with ./loader.js!: Module is not an ECMAScript module
      entry ./index.js main
    ./loader.js! [130] 22 bytes {179} [depth 1] [dependent] [built] [code generated]
      [used exports unknown]
      CommonJS bailout: module.exports is used directly at 1:0-14
      Statement (ExpressionStatement) with side effects in source code at 1:0-22
      ModuleConcatenation bailout: Module is not an ECMAScript module
      harmony side effect evaluation ./loader! [10] ./index.js 1:0-27
      harmony import specifier ./loader! [10] ./index.js 5:8-10
      cjs self exports reference [130] ./loader.js! 1:0-14
  

LOG from webpack.Compiler
<t> make hook: 25.559458 ms
<t> finish make hook: 0.018699 ms
<t> finish compilation: 0.238802 ms
<t> seal compilation: 4.79527 ms
<t> afterCompile hook: 0.010762 ms
<t> emitAssets: 94.473321 ms
<t> emitRecords: 0.001895 ms
<t> done hook: 0.021154 ms
<t> beginIdle: 0.006017 ms

LOG from webpack.Compilation
<t> compute affected modules: 0.005547 ms
<t> finish modules: 0.173321 ms
<t> report dependency errors and warnings: 0.043695 ms
<t> optimize dependencies: 0.227034 ms
<t> create chunks: 0.28228 ms
<t> compute affected modules with chunk graph: 0.001958 ms
<t> optimize: 0.817112 ms
    3 modules hashed, 0 from cache (1 variants per module in average)
<t> module hashing: 0.20723 ms
    100% code generated (3 generated, 0 from cache)
<t> code generation: 0.39165 ms
<t> runtime requirements.modules: 0.064733 ms
<t> runtime requirements.chunks: 0.07439 ms
<t> runtime requirements.entries: 0.574658 ms
<t> runtime requirements: 0.739475 ms
<t> hashing: initialize hash: 0.004629 ms
<t> hashing: sort chunks: 0.015184 ms
<t> hashing: hash runtime modules: 0.58816 ms
<t> hashing: hash chunks: 0.308622 ms
<t> hashing: hash digest: 0.015967 ms
<t> hashing: process full hash modules: 0.001536 ms
<t> hashing: 0.974428 ms
    100% code generated (7 generated, 0 from cache)
<t> record hash: 0.010661 ms
<t> module assets: 0.017574 ms
<t> create chunk assets: 0.576949 ms
<t> process assets: 0.216655 ms

LOG from webpack.FlagDependencyExportsPlugin
<t> restore cached provided exports: 0.030051 ms
<t> figure out provided exports: 0.04186 ms
    67% of exports of modules have been determined (1 no declared exports, 2 not cached, 0 flagged uncacheable, 0 from cache, 0 from mem cache, 0 additional calculations due to dependencies)
<t> store provided exports into cache: 0.015753 ms

LOG from webpack.InnerGraphPlugin
<t> infer dependency usage: 0.017287 ms

LOG from webpack.SideEffectsFlagPlugin
<t> update dependencies: 0.020825 ms

LOG from webpack.FlagDependencyUsagePlugin
<t> initialize exports usage: 0.004194 ms
<t> trace exports usage in graph: 0.152059 ms

LOG from webpack.buildChunkGraph
<t> visitModules: prepare: 0.014161 ms
<t> visitModules: visiting: 0.086665 ms
<t> visitModules: calculating available modules: 0.014007 ms
<t> visitModules: merging available modules: 0.006104 ms
<t> visitModules: check modules for revisit: 0.003911 ms
<t> visitModules: prepare: 0.001659 ms
<t> visitModules: visiting: 0.020091 ms
    7 queue items processed (4 blocks)
    1 chunk groups connected
    1 chunk groups processed for merging (1 module sets, 0 forked, 0 + 0 modules forked, 0 + 0 modules merged into fork, 0 resulting modules)
    1 chunk group info updated (0 already connected chunk groups reconnected)
<t> visitModules: 0.170629 ms
<t> connectChunkGroups: 0.014268 ms
<t> cleanup: 0.002589 ms

LOG from webpack.SplitChunksPlugin
<t> prepare: 0.022605 ms
<t> modules: 0.079602 ms
<t> queue: 0.003321 ms
<t> maxSize: 0.011815 ms

LOG from webpack.ModuleConcatenationPlugin
<t> select relevant modules: 0.033213 ms
<t> sort relevant modules: 0.004351 ms
<t> find modules to concatenate: 0.0688 ms
<t> sort concat configurations: 0.000994 ms
<t> create concatenated modules: 0.004283 ms
+ 3 hidden lines

LOG from webpack.FileSystemInfo
    3 new snapshots created
    0% root snapshot uncached (0 / 0)
    0% children snapshot uncached (0 / 0)
    0 entries tested
    File info in cache: 2 timestamps 2 hashes 2 timestamp hash combinations
    File timestamp hash combination snapshot optimization: 0% (0/2) entries shared via 0 shared snapshots (0 times referenced)
    Directory info in cache: 0 timestamps 0 hashes 0 timestamp hash combinations
    Managed items info in cache: 0 items

2021-12-05 17:44:57: webpack 5.64.4 compiled successfully in 127 ms (da4cabd9118714d7e691)

PublicPath: (none)
asset bundle2.js 1.43 KiB {179} [emitted] [minimized] (name: main)
  license bundle2.js.LICENSE.txt 200 bytes [emitted]
asset 52.bundle2.js 185 bytes {52} [emitted] [minimized]
  license 52.bundle2.js.LICENSE.txt 71 bytes [emitted]
Entrypoint main 1.43 KiB = bundle2.js
chunk {52} (runtime: main) 52.bundle2.js 19 bytes <{179}> [rendered]
  > ./chunk [10] ./index.js 3:33-50
  ./chunk.js [52] 19 bytes {52} [depth 1] [built] [code generated]
    [exports: default]
    import() ./chunk [10] ./index.js 3:33-50
chunk {179} (runtime: main) bundle2.js (main) 168 bytes (javascript) 3.2 KiB (runtime) >{52}< [entry] [rendered]
  > ./index.js main
  runtime modules 3.2 KiB
    webpack/runtime/compat get default export 267 bytes {179} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/define property getters 308 bytes {179} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/ensure chunk 326 bytes {179} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/get javascript chunk filename 175 bytes {179} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/hasOwnProperty shorthand 88 bytes {179} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/make namespace object 274 bytes {179} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/readFile chunk loading 1.8 KiB {179} [code generated]
      [no exports]
      [used exports unknown]
  cacheable modules 168 bytes
    ./index.js [10] 146 bytes {179} [depth 0] [built] [code generated]
      [no exports]
      [no exports used]
      Statement (ExpressionStatement) with side effects in source code at 3:0-52
      ModuleConcatenation bailout: Cannot concat with ./loader.js!: Module is not an ECMAScript module
      entry ./index.js main
    ./loader.js! [130] 22 bytes {179} [depth 1] [dependent] [built] [code generated]
      [used exports unknown]
      CommonJS bailout: module.exports is used directly at 1:0-14
      Statement (ExpressionStatement) with side effects in source code at 1:0-22
      ModuleConcatenation bailout: Module is not an ECMAScript module
      harmony side effect evaluation ./loader! [10] ./index.js 1:0-27
      harmony import specifier ./loader! [10] ./index.js 5:8-10
      cjs self exports reference [130] ./loader.js! 1:0-14
  

LOG from webpack.Compiler
<t> make hook: 29.742987 ms
<t> finish make hook: 0.015273 ms
<t> finish compilation: 0.186762 ms
<t> seal compilation: 87.124478 ms
<t> afterCompile hook: 0.009952 ms
<t> emitAssets: 6.315346 ms
<t> emitRecords: 0.000821 ms
<t> done hook: 0.01055 ms
<t> beginIdle: 0.005874 ms

LOG from webpack.Compilation
<t> compute affected modules: 0.00368 ms
<t> finish modules: 0.141066 ms
<t> report dependency errors and warnings: 0.024064 ms
<t> optimize dependencies: 0.186032 ms
<t> create chunks: 0.252936 ms
<t> compute affected modules with chunk graph: 0.003166 ms
<t> optimize: 0.817204 ms
    3 modules hashed, 0 from cache (1 variants per module in average)
<t> module hashing: 0.256422 ms
    100% code generated (3 generated, 0 from cache)
<t> code generation: 0.432005 ms
<t> runtime requirements.modules: 0.084355 ms
<t> runtime requirements.chunks: 0.106893 ms
<t> runtime requirements.entries: 0.562057 ms
<t> runtime requirements: 0.790852 ms
<t> hashing: initialize hash: 0.007028 ms
<t> hashing: sort chunks: 0.020723 ms
<t> hashing: hash runtime modules: 0.719507 ms
<t> hashing: hash chunks: 0.429131 ms
<t> hashing: hash digest: 0.021541 ms
<t> hashing: process full hash modules: 0.001916 ms
<t> hashing: 1.255868 ms
    100% code generated (7 generated, 0 from cache)
<t> record hash: 0.014893 ms
<t> module assets: 0.017129 ms
<t> create chunk assets: 0.856711 ms
<t> process assets: 81.839824 ms

LOG from webpack.FlagDependencyExportsPlugin
<t> restore cached provided exports: 0.02145 ms
<t> figure out provided exports: 0.032794 ms
    67% of exports of modules have been determined (1 no declared exports, 2 not cached, 0 flagged uncacheable, 0 from cache, 0 from mem cache, 0 additional calculations due to dependencies)
<t> store provided exports into cache: 0.013319 ms

LOG from webpack.InnerGraphPlugin
<t> infer dependency usage: 0.015174 ms

LOG from webpack.SideEffectsFlagPlugin
<t> update dependencies: 0.011281 ms

LOG from webpack.FlagDependencyUsagePlugin
<t> initialize exports usage: 0.004096 ms
<t> trace exports usage in graph: 0.122909 ms

LOG from webpack.buildChunkGraph
<t> visitModules: prepare: 0.009629 ms
<t> visitModules: visiting: 0.071113 ms
<t> visitModules: calculating available modules: 0.01237 ms
<t> visitModules: merging available modules: 0.005002 ms
<t> visitModules: check modules for revisit: 0.00319 ms
<t> visitModules: prepare: 0.001409 ms
<t> visitModules: visiting: 0.01842 ms
    7 queue items processed (4 blocks)
    1 chunk groups connected
    1 chunk groups processed for merging (1 module sets, 0 forked, 0 + 0 modules forked, 0 + 0 modules merged into fork, 0 resulting modules)
    1 chunk group info updated (0 already connected chunk groups reconnected)
<t> visitModules: 0.147284 ms
<t> connectChunkGroups: 0.012988 ms
<t> cleanup: 0.002556 ms

LOG from webpack.SplitChunksPlugin
<t> prepare: 0.021224 ms
<t> modules: 0.073397 ms
<t> queue: 0.002687 ms
<t> maxSize: 0.010196 ms

LOG from webpack.ModuleConcatenationPlugin
<t> select relevant modules: 0.028246 ms
<t> sort relevant modules: 0.003831 ms
<t> find modules to concatenate: 0.063226 ms
<t> sort concat configurations: 0.000908 ms
<t> create concatenated modules: 0.003648 ms
+ 3 hidden lines

LOG from webpack.FileSystemInfo
    3 new snapshots created
    0% root snapshot uncached (0 / 0)
    0% children snapshot uncached (0 / 0)
    0 entries tested
    File info in cache: 2 timestamps 2 hashes 2 timestamp hash combinations
    File timestamp hash combination snapshot optimization: 0% (0/2) entries shared via 0 shared snapshots (0 times referenced)
    Directory info in cache: 0 timestamps 0 hashes 0 timestamp hash combinations
    Managed items info in cache: 0 items

2021-12-05 17:44:57: webpack 5.64.4 compiled successfully in 125 ms (4fdd313ab3251aa95c5e)