{"version":3,"file":"bundle0.js","mappings":";;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA;AACA,CAAC,mBAAO,CAAC,uDAAuB;AAChC,CAAC,mBAAO,CAAC,mEAA6B;AACtC,CAAC,mBAAO,CAAC,iFAAoC;AAC7C,CAAC,mBAAO,CAAC,uEAA+B;AACxC,CAAC,mBAAO,CAAC,6DAA0B;AACnC,CAAC,mBAAO,CAAC,yDAAwB;AACjC,CAAC;;AAED;AACA,UAAU,mBAAO,CAAC,cAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack:///./folder/test5.txt","webpack:///./folder/test6.txt","webpack:///./folder/test4.txt","webpack:///./folder/test3.txt","webpack:///./folder/test2.txt","webpack:///./folder/test1.txt","webpack:///external node-commonjs \"fs\"","webpack:///webpack/bootstrap","webpack:///./index.js"],"sourcesContent":["Test","Test","Test","Test","Test","Test","module.exports = require(\"fs\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","it(\"should run\", () => {\n\trequire(\"./loader-source-root!\");\n\trequire(\"./loader-source-root-slash!\");\n\trequire(\"./loader-source-root-source-slash!\");\n\trequire(\"./loader-source-root-2-slash!\");\n\trequire(\"./loader-no-source-root!\");\n\trequire(\"./loader-pre-relative!\");\n});\n\nit(\"should generate the correct SourceMap\", function() {\n\tvar fs = require(\"fs\");\n\tvar source = JSON.parse(fs.readFileSync(__filename + \".map\", \"utf-8\"));\n\texpect(source.sources).toContain(\"webpack:///./folder/test1.txt\");\n\texpect(source.sources).toContain(\"webpack:///./folder/test2.txt\");\n\texpect(source.sources).toContain(\"webpack:///./folder/test3.txt\");\n\texpect(source.sources).toContain(\"webpack:///./folder/test4.txt\");\n\texpect(source.sources).toContain(\"webpack:///./folder/test5.txt\");\n\texpect(source.sources).toContain(\"webpack:///./folder/test6.txt\");\n});\n"],"names":[],"sourceRoot":""}