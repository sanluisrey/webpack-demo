PublicPath: (none)
asset bundle0.js 3.97 KiB {main} [emitted] (name: main)
  sourceMap bundle0.js.map 2.48 KiB ({main}) [emitted] [dev] (auxiliary name: main)
Entrypoint main 3.97 KiB (2.48 KiB) = bundle0.js 1 auxiliary asset
chunk {main} (runtime: main) bundle0.js (main) 1010 bytes [entry] [rendered]
  > ./index.js main
  ./index.js 838 bytes {main} [depth 0] [built] [code generated]
    [used exports unknown]
    entry ./index.js main
  ./loader-no-source-root.js! 22 bytes {main} [depth 1] [dependent] [built] [code generated]
    [used exports unknown]
    CommonJS bailout: module.exports is used directly at 1:0-14
    cjs require ./loader-no-source-root! [./index.js] 6:1-36
    cjs self exports reference [./loader-no-source-root.js!] 1:0-14
  ./loader-pre-relative.js! 22 bytes {main} [depth 1] [dependent] [built] [code generated]
    [used exports unknown]
    CommonJS bailout: module.exports is used directly at 1:0-14
    cjs require ./loader-pre-relative! [./index.js] 7:1-34
    cjs self exports reference [./loader-pre-relative.js!] 1:0-14
  ./loader-source-root-2-slash.js! 22 bytes {main} [depth 1] [dependent] [built] [code generated]
    [used exports unknown]
    CommonJS bailout: module.exports is used directly at 1:0-14
    cjs require ./loader-source-root-2-slash! [./index.js] 5:1-41
    cjs self exports reference [./loader-source-root-2-slash.js!] 1:0-14
  ./loader-source-root-slash.js! 22 bytes {main} [depth 1] [dependent] [built] [code generated]
    [used exports unknown]
    CommonJS bailout: module.exports is used directly at 1:0-14
    cjs require ./loader-source-root-slash! [./index.js] 3:1-39
    cjs self exports reference [./loader-source-root-slash.js!] 1:0-14
  ./loader-source-root-source-slash.js! 22 bytes {main} [depth 1] [dependent] [built] [code generated]
    [used exports unknown]
    CommonJS bailout: module.exports is used directly at 1:0-14
    cjs require ./loader-source-root-source-slash! [./index.js] 4:1-46
    cjs self exports reference [./loader-source-root-source-slash.js!] 1:0-14
  ./loader-source-root.js! 22 bytes {main} [depth 1] [dependent] [built] [code generated]
    [used exports unknown]
    CommonJS bailout: module.exports is used directly at 1:0-14
    cjs require ./loader-source-root! [./index.js] 2:1-33
    cjs self exports reference [./loader-source-root.js!] 1:0-14
  external "fs" [fs] 42 bytes {main} [depth 1] [dependent] [built] [code generated]
    [used exports unknown]
    cjs require fs [./index.js] 11:10-23
  

LOG from webpack.Compiler
<t> make hook: 35.033677 ms
<t> finish make hook: 0.025082 ms
<t> finish compilation: 0.169069 ms
<t> seal compilation: 3.729107 ms
<t> afterCompile hook: 0.010729 ms
<t> emitAssets: 4.728754 ms
<t> emitRecords: 0.0025 ms
<t> done hook: 0.012479 ms
<t> beginIdle: 0.008211 ms

LOG from webpack.Compilation
<t> compute affected modules: 0.004307 ms
<t> finish modules: 0.126598 ms
<t> report dependency errors and warnings: 0.024144 ms
<t> optimize dependencies: 0.03246 ms
<t> create chunks: 0.223678 ms
<t> compute affected modules with chunk graph: 0.001609 ms
<t> optimize: 0.51856 ms
    8 modules hashed, 0 from cache (1 variants per module in average)
<t> module hashing: 0.273984 ms
    100% code generated (8 generated, 0 from cache)
<t> code generation: 0.362106 ms
<t> runtime requirements.modules: 0.034025 ms
<t> runtime requirements.chunks: 0.046323 ms
<t> runtime requirements.entries: 0.064779 ms
<t> runtime requirements: 0.165182 ms
<t> hashing: initialize hash: 0.004541 ms
<t> hashing: sort chunks: 0.014259 ms
<t> hashing: hash runtime modules: 0.006526 ms
<t> hashing: hash chunks: 0.238519 ms
<t> hashing: hash digest: 0.013277 ms
<t> hashing: process full hash modules: 0.001379 ms
<t> hashing: 0.31195 ms
    NaN% code generated (0 generated, 0 from cache)
<t> record hash: 0.006164 ms
<t> module assets: 0.011061 ms
<t> create chunk assets: 0.404261 ms
<t> process assets: 1.217218 ms

LOG from webpack.ResolverCachePlugin
    100% really resolved (7 real resolves with 0 cached but invalid, 0 cached valid, 0 concurrent)

LOG from webpack.FlagDependencyExportsPlugin
<t> restore cached provided exports: 0.028874 ms
<t> figure out provided exports: 0.021866 ms
    13% of exports of modules have been determined (7 no declared exports, 0 not cached, 1 flagged uncacheable, 0 from cache, 0 from mem cache, 0 additional calculations due to dependencies)
<t> store provided exports into cache: 0.003568 ms

LOG from webpack.SideEffectsFlagPlugin
<t> update dependencies: 0.006156 ms

LOG from webpack.buildChunkGraph
<t> visitModules: prepare: 0.020386 ms
<t> visitModules: visiting: 0.098577 ms
    16 queue items processed (8 blocks)
    0 chunk groups connected
    0 chunk groups processed for merging (0 module sets, 0 forked, 0 + 0 modules forked, 0 + 0 modules merged into fork, 0 resulting modules)
    0 chunk group info updated (0 already connected chunk groups reconnected)
<t> visitModules: 0.128243 ms
<t> connectChunkGroups: 0.002575 ms
<t> cleanup: 0.002338 ms

LOG from webpack.SplitChunksPlugin
<t> prepare: 0.019237 ms
<t> modules: 0.072203 ms
<t> queue: 0.002724 ms
<t> maxSize: 0.007353 ms

LOG from webpack.FileSystemInfo
    14 new snapshots created
    0% root snapshot uncached (0 / 0)
    0% children snapshot uncached (0 / 0)
    0 entries tested
    File info in cache: 28 timestamps 0 hashes 0 timestamp hash combinations
    File timestamp snapshot optimization: 91% (77/85) entries shared via 1 shared snapshots (6 times referenced)
    Directory info in cache: 0 timestamps 0 hashes 0 timestamp hash combinations
    Missing items snapshot optimization: 82% (28/34) entries shared via 1 shared snapshots (6 times referenced)
    Managed items info in cache: 0 items

2021-12-05 17:44:57: webpack 5.64.4 compiled successfully in 45 ms (cec76c7200c18624a07b)