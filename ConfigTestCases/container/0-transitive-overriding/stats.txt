PublicPath: (none)
asset bundle0.js 25.3 KiB {main} [emitted] (name: main)
asset container-with-shared.js 23 KiB {container-with-shared} [emitted] (name: container-with-shared)
asset a_js.bundle0.js 1.76 KiB {a_js}, {b_js} [emitted]
asset b_js.bundle0.js 1.02 KiB {b_js} [emitted]
asset modules_js.bundle0.js 601 bytes {modules_js} [emitted]
asset shared_js.bundle0.js 501 bytes {shared_js} [emitted]
Entrypoint main 25.3 KiB = bundle0.js
Entrypoint container-with-shared 23 KiB = container-with-shared.js
chunk {a_js} (runtime: container-with-shared, main) a_js.bundle0.js 47 bytes <{container-with-shared}> <{main}> ={webpack_sharing_consume_default_shared_shared}= >{shared_js}< [rendered]
  > ./a [./index.js] ./index.js 2:8-21
  > ./a [webpack/container/entry/container-with-shared] container entry ./a
  ./a.js 21 bytes {a_js} [depth 1] [built] [code generated]
    Dependency (harmony side effect evaluation) with side effects at 1:0-20
    ModuleConcatenation bailout: List of module exports is dynamic (other exports: maybe provided (runtime-defined) and maybe used in main, container-with-shared (runtime-defined))
    import() ./a [./index.js] 2:8-21
    container exposed ./a [webpack/container/entry/container-with-shared] container entry ./a[0]
  ./b.js 26 bytes {a_js} {b_js} [depth 1] [dependent] [built] [code generated]
    Dependency (harmony side effect evaluation) with side effects at 1:0-25
    ModuleConcatenation bailout: List of module exports is dynamic (other exports: maybe provided (runtime-defined) and maybe used in main, container-with-shared (runtime-defined))
    from origin ./a.js
      harmony side effect evaluation ./b [./a.js] 1:0-20
      harmony export imported specifier ./b [./a.js] 1:0-20
    import() ./b [./index.js] 8:8-21
    container exposed ./b [webpack/container/entry/container-with-shared] container entry ./b[0]
chunk {b_js} (runtime: container-with-shared, main) b_js.bundle0.js 26 bytes <{container-with-shared}> <{main}> ={webpack_sharing_consume_default_shared_shared}= >{shared_js}< [rendered]
  > ./b [./index.js] ./index.js 8:8-21
  > ./b [webpack/container/entry/container-with-shared] container entry ./b
  ./b.js 26 bytes {a_js} {b_js} [depth 1] [built] [code generated]
    Dependency (harmony side effect evaluation) with side effects at 1:0-25
    ModuleConcatenation bailout: List of module exports is dynamic (other exports: maybe provided (runtime-defined) and maybe used in main, container-with-shared (runtime-defined))
    from origin ./a.js
      harmony side effect evaluation ./b [./a.js] 1:0-20
      harmony export imported specifier ./b [./a.js] 1:0-20
    import() ./b [./index.js] 8:8-21
    container exposed ./b [webpack/container/entry/container-with-shared] container entry ./b[0]
chunk {container-with-shared} (runtime: container-with-shared) container-with-shared.js (container-with-shared) 42 bytes (javascript) 42 bytes (share-init) 15 KiB (runtime) >{a_js}< >{b_js}< >{modules_js}< >{shared_js}< >{webpack_sharing_consume_default_shared_shared}< [entry] [rendered]
  > container-with-shared
  runtime modules 15 KiB
    webpack/runtime/compat get default export 267 bytes {container-with-shared} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/consumes 8.22 KiB {container-with-shared} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/define property getters 308 bytes {container-with-shared} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/ensure chunk 326 bytes {container-with-shared} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/get javascript chunk filename 175 bytes {container-with-shared} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/hasOwnProperty shorthand 88 bytes {container-with-shared} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/make namespace object 274 bytes {container-with-shared} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/readFile chunk loading 1.85 KiB {container-with-shared} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/remotes loading 1.56 KiB {container-with-shared} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/sharing 1.97 KiB {container-with-shared} [code generated]
      [no exports]
      [used exports unknown]
  built modules 42 bytes (javascript) 42 bytes (share-init) [built]
    container entry [webpack/container/entry/container-with-shared] 42 bytes {container-with-shared} [depth 0] [built] [code generated]
      [exports: get, init]
      ModuleConcatenation bailout: Module Concatenation is not implemented for ContainerEntryModule
      container entry container-with-shared
      used as library export
    provide shared module (default) shared@1 = ./shared [webpack/sharing/provide/default/shared] 42 bytes {container-with-shared} {main} [depth 0] [built] [code generated]
      [no exports used]
      ModuleConcatenation bailout: Module Concatenation is not implemented for ProvideSharedModule
      provide shared module
chunk {main} (runtime: main) bundle0.js (main) 625 bytes (javascript) 42 bytes (share-init) 16.6 KiB (runtime) >{a_js}< >{b_js}< >{shared_js}< >{webpack_container_remote_container-with-shared_a}< >{webpack_container_remote_container-with-shared_b}< >{webpack_sharing_consume_default_shared_shared}< [entry] [rendered]
  > ./index.js main
  runtime modules 16.6 KiB
    webpack/runtime/compat get default export 267 bytes {main} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/consumes 8.22 KiB {main} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/create fake namespace object 1.11 KiB {main} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/define property getters 308 bytes {main} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/ensure chunk 326 bytes {main} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/get javascript chunk filename 175 bytes {main} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/hasOwnProperty shorthand 88 bytes {main} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/make namespace object 274 bytes {main} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/readFile chunk loading 1.81 KiB {main} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/remotes loading 2.04 KiB {main} [code generated]
      [no exports]
      [used exports unknown]
    webpack/runtime/sharing 2.03 KiB {main} [code generated]
      [no exports]
      [used exports unknown]
  built modules 625 bytes (javascript) 42 bytes (share-init) [built]
    ./index.js 583 bytes {main} [depth 0] [built] [code generated]
      [no exports used]
      Statement (ExpressionStatement) with side effects in source code at 1:0-5:3
      ModuleConcatenation bailout: Module is not an ECMAScript module
      entry ./index.js main
    external "./container-with-shared.js" [webpack/container/reference/container-with-shared] 42 bytes {main} [depth 2] [built] [code generated]
      ModuleConcatenation bailout: List of module exports is dynamic (other exports: maybe provided (runtime-defined) and maybe used in main (runtime-defined))
      remote to external webpack/container/reference/container-with-shared [webpack/container/remote/container-with-shared/a] remote container-with-shared/a
      remote to external webpack/container/reference/container-with-shared [webpack/container/remote/container-with-shared/b] remote container-with-shared/b
    provide shared module (default) shared@1 = ./shared [webpack/sharing/provide/default/shared] 42 bytes {container-with-shared} {main} [depth 0] [built] [code generated]
      [no exports used]
      ModuleConcatenation bailout: Module Concatenation is not implemented for ProvideSharedModule
      provide shared module
chunk {modules_js} (runtime: container-with-shared) modules_js.bundle0.js 56 bytes <{container-with-shared}> [rendered]
  > ./modules [webpack/container/entry/container-with-shared] container entry ./modules
  ./modules.js 56 bytes {modules_js} [depth 1] [built] [code generated]
    [exports: default]
    Statement (ExportDefaultDeclaration) with side effects in source code at 1:0-55
    container exposed ./modules [webpack/container/entry/container-with-shared] container entry ./modules[0]
chunk {shared_js} (runtime: container-with-shared, main) shared_js.bundle0.js 31 bytes <{a_js}> <{b_js}> <{container-with-shared}> <{main}> <{webpack_sharing_consume_default_shared_shared}> [rendered]
  > [webpack/sharing/consume/default/shared/./shared] consume shared module (default) shared@* (strict) (fallback: ./shared.js)
  > [webpack/sharing/provide/default/shared] provide shared module (default) shared@1 = ./shared
  ./shared.js 31 bytes {shared_js} [depth 1] [built] [code generated]
    [exports: value]
    consume shared fallback ./shared [webpack/sharing/consume/default/shared/./shared] consume shared module (default) shared@* (strict) (fallback: ./shared.js)
    provide module for shared ./shared [webpack/sharing/provide/default/shared] provide shared module (default) shared@1 = ./shared
chunk {webpack_container_remote_container-with-shared_a} (runtime: main) 6 bytes (remote) 6 bytes (share-init) <{main}>
  > container-with-shared/a [./index.js] ./index.js 14:8-41
  remote container-with-shared/a [webpack/container/remote/container-with-shared/a] 6 bytes (remote) 6 bytes (share-init) {webpack_container_remote_container-with-shared_a} [depth 1] [built] [code generated]
    [used exports unknown]
    ModuleConcatenation bailout: Module Concatenation is not implemented for RemoteModule
    import() container-with-shared/a [./index.js] 14:8-41
chunk {webpack_container_remote_container-with-shared_b} (runtime: main) 6 bytes (remote) 6 bytes (share-init) <{main}>
  > container-with-shared/b [./index.js] ./index.js 20:8-41
  remote container-with-shared/b [webpack/container/remote/container-with-shared/b] 6 bytes (remote) 6 bytes (share-init) {webpack_container_remote_container-with-shared_b} [depth 1] [built] [code generated]
    [used exports unknown]
    ModuleConcatenation bailout: Module Concatenation is not implemented for RemoteModule
    import() container-with-shared/b [./index.js] 20:8-41
chunk {webpack_sharing_consume_default_shared_shared} (runtime: container-with-shared, main) 42 bytes <{container-with-shared}> <{main}> ={a_js}= ={b_js}= >{shared_js}< split chunk (cache group: default)
  > ./a [./index.js] ./index.js 2:8-21
  > ./b [./index.js] ./index.js 8:8-21
  > ./a [webpack/container/entry/container-with-shared] container entry ./a
  > ./b [webpack/container/entry/container-with-shared] container entry ./b
  consume shared module (default) shared@* (strict) (fallback: ./shared.js) [webpack/sharing/consume/default/shared/./shared] 42 bytes {webpack_sharing_consume_default_shared_shared} [depth 2] [built] [code generated]
    [used exports unknown]
    ModuleConcatenation bailout: Module Concatenation is not implemented for ConsumeSharedModule
    harmony side effect evaluation ./shared [./b.js] 1:0-25
    harmony export imported specifier ./shared [./b.js] 1:0-25
  

LOG from webpack.Compiler
<t> make hook: 17.727139 ms
<t> finish make hook: 0.560417 ms
<t> finish compilation: 0.923792 ms
<t> seal compilation: 17.5398 ms
<t> afterCompile hook: 0.017741 ms
<t> emitAssets: 1.839783 ms
<t> emitRecords: 0.002001 ms
<t> done hook: 0.016958 ms
<t> beginIdle: 0.008155 ms

LOG from webpack.Compilation
<t> compute affected modules: 0.002634 ms
<t> finish modules: 0.818682 ms
<t> report dependency errors and warnings: 0.088613 ms
<t> optimize dependencies: 0.398428 ms
<t> create chunks: 0.665889 ms
<t> compute affected modules with chunk graph: 0.003227 ms
<t> optimize: 2.374291 ms
    12 modules hashed, 0 from cache (1.09 variants per module in average)
<t> module hashing: 0.626735 ms
    100% code generated (11 generated, 0 from cache)
<t> code generation: 1.316168 ms
<t> runtime requirements.modules: 0.11869 ms
<t> runtime requirements.chunks: 0.144786 ms
<t> runtime requirements.entries: 1.511928 ms
<t> runtime requirements: 1.812334 ms
<t> hashing: initialize hash: 0.009427 ms
<t> hashing: sort chunks: 0.047611 ms
<t> hashing: hash runtime modules: 5.324905 ms
<t> hashing: hash chunks: 1.155602 ms
<t> hashing: hash digest: 0.039643 ms
<t> hashing: process full hash modules: 0.002371 ms
<t> hashing: 6.673592 ms
    100% code generated (21 generated, 0 from cache)
<t> record hash: 0.026558 ms
<t> module assets: 0.039442 ms
<t> create chunk assets: 1.99881 ms
<t> process assets: 0.822521 ms

LOG from webpack.FlagDependencyExportsPlugin
<t> restore cached provided exports: 0.037255 ms
<t> figure out provided exports: 0.37829 ms
    55% of exports of modules have been determined (5 no declared exports, 4 not cached, 2 flagged uncacheable, 0 from cache, 0 from mem cache, 0 additional calculations due to dependencies)
<t> store provided exports into cache: 0.025369 ms

LOG from webpack.InnerGraphPlugin
<t> infer dependency usage: 0.102901 ms

LOG from webpack.SideEffectsFlagPlugin
<t> update dependencies: 0.026367 ms

LOG from webpack.FlagDependencyUsagePlugin
<t> initialize exports usage: 0.010723 ms
<t> trace exports usage in graph: 0.308012 ms

LOG from webpack.buildChunkGraph
<t> visitModules: prepare: 0.036053 ms
<t> visitModules: visiting: 0.148609 ms
<t> visitModules: calculating available modules: 0.014728 ms
<t> visitModules: merging available modules: 0.027561 ms
<t> visitModules: check modules for revisit: 0.003069 ms
<t> visitModules: prepare: 0.083514 ms
<t> visitModules: visiting: 0.208786 ms
<t> visitModules: calculating available modules: 0.014579 ms
<t> visitModules: merging available modules: 0.027041 ms
<t> visitModules: check modules for revisit: 0.001477 ms
<t> visitModules: prepare: 0.005456 ms
<t> visitModules: visiting: 0.021225 ms
    55 queue items processed (34 blocks)
    13 chunk groups connected
    9 chunk groups processed for merging (13 module sets, 2 forked, 5 + 2 modules forked, 5 + 2 modules merged into fork, 5 resulting modules)
    9 chunk group info updated (0 already connected chunk groups reconnected)
<t> visitModules: 0.504338 ms
<t> connectChunkGroups: 0.027393 ms
<t> cleanup: 0.002821 ms

LOG from webpack.SplitChunksPlugin
<t> prepare: 0.021246 ms
<t> modules: 0.218711 ms
<t> queue: 0.058552 ms
<t> maxSize: 0.01424 ms

LOG from webpack.ModuleConcatenationPlugin
<t> select relevant modules: 0.106885 ms
<t> sort relevant modules: 0.002619 ms
<t> find modules to concatenate: 0.046353 ms
<t> sort concat configurations: 0.00104 ms
<t> create concatenated modules: 0.004568 ms
+ 3 hidden lines

LOG from webpack.FileSystemInfo
    5 new snapshots created
    0% root snapshot uncached (0 / 0)
    0% children snapshot uncached (0 / 0)
    0 entries tested
    File info in cache: 5 timestamps 5 hashes 5 timestamp hash combinations
    File timestamp hash combination snapshot optimization: 0% (0/5) entries shared via 0 shared snapshots (0 times referenced)
    Directory info in cache: 0 timestamps 0 hashes 0 timestamp hash combinations
    Managed items info in cache: 0 items

2021-12-05 17:44:21: webpack 5.64.4 compiled successfully in 41 ms (8b89fcfbe42b4a1cd4f7)