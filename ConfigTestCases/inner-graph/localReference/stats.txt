nothing without module concatenation:
  PublicPath: (none)
  asset bundle0.js 5.79 KiB {179} [emitted] (name: main)
  Entrypoint main 5.79 KiB = bundle0.js
  chunk {179} (runtime: main) bundle0.js (main) 638 bytes (javascript) 937 bytes (runtime) [entry] [rendered]
    > ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":["deepEqual"]},"name":"nothing"}! main
    cacheable modules 638 bytes
      modules by path ../_helpers/*.js 132 bytes
        ../_helpers/inner-file.js?0 [326] 131 bytes {179} [depth 1] [dependent] [built] [code generated]
          [only some exports used: __usedExports, deepEqual]
          Statement (ExportNamedDeclaration) with side effects in source code at 3:0-66
          from origin ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":["deepEqual"]},"name":"nothing"}!
            harmony side effect evaluation ./assert [922] ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":["deepEqual"]},"name":"nothing"}! 3:0-58
            harmony import specifier ./assert [922] ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":["deepEqual"]},"name":"nothing"}! 5:7-20
          from origin ./module.js
            harmony side effect evaluation ./assert [662] ./module.js 1:0-44
            harmony import specifier ./assert [662] ./module.js 4:1-10
        ../_helpers/unknown.js [256] 1 bytes {179} [depth 2] [dependent] [built] [code generated]
          [used exports unknown]
          [inactive] harmony side effect evaluation ./unknown [326] ../_helpers/inner-file.js?0 1:0-36
          [inactive] harmony export imported specifier ./unknown [326] ../_helpers/inner-file.js?0 1:0-36
          [inactive] harmony side effect evaluation ./unknown [326] ../_helpers/inner-file.js?0 2:0-26
          harmony export imported specifier ./unknown [326] ../_helpers/inner-file.js?0 2:0-26
      ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":["deepEqual"]},"name":"nothing"}! [922] 266 bytes {179} [depth 0] [built] [code generated]
        [no exports]
        [no exports used]
        Statement (IfStatement) with side effects in source code at 1:0-67
        entry ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":["deepEqual"]},"name":"nothing"}! main
      ../_helpers/testModuleLoader.js?[]! [945] 47 bytes {179} [depth 1] [dependent] [built] [code generated]
        [exports: default]
        Dependency (harmony side effect evaluation) with side effects at 1:0-28
        cjs require ../_helpers/testModuleLoader?[]! [922] ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":["deepEqual"]},"name":"nothing"}! 1:23-66
      ./module.js [662] 193 bytes {179} [depth 2] [dependent] [built] [code generated]
        [no exports]
        [no exports used]
        Statement (ExpressionStatement) with side effects in source code at 19:0-12
        harmony side effect evaluation ./module [945] ../_helpers/testModuleLoader.js?[]! 1:0-28
    runtime modules 937 bytes
      webpack/runtime/compat get default export 267 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/define property getters 308 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/hasOwnProperty shorthand 88 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/make namespace object 274 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
    

  LOG from webpack.Compiler
  <t> make hook: 29.168144 ms
  <t> finish make hook: 0.010759 ms
  <t> finish compilation: 0.21752 ms
  <t> seal compilation: 2.835899 ms
  <t> afterCompile hook: 0.008141 ms
  <t> emitAssets: 0.912223 ms
  <t> emitRecords: 0.002007 ms
  <t> done hook: 0.023773 ms
  <t> beginIdle: 0.004065 ms

  LOG from webpack.Compilation
  <t> compute affected modules: 0.004712 ms
  <t> finish modules: 0.169009 ms
  <t> report dependency errors and warnings: 0.031076 ms
  <t> optimize dependencies: 0.260957 ms
  <t> create chunks: 0.150278 ms
  <t> compute affected modules with chunk graph: 0.001616 ms
  <t> optimize: 0.591589 ms
      5 modules hashed, 0 from cache (1 variants per module in average)
  <t> module hashing: 0.172012 ms
      100% code generated (5 generated, 0 from cache)
  <t> code generation: 0.348685 ms
  <t> runtime requirements.modules: 0.040925 ms
  <t> runtime requirements.chunks: 0.046397 ms
  <t> runtime requirements.entries: 0.162899 ms
  <t> runtime requirements: 0.269332 ms
  <t> hashing: initialize hash: 0.002101 ms
  <t> hashing: sort chunks: 0.015506 ms
  <t> hashing: hash runtime modules: 0.109449 ms
  <t> hashing: hash chunks: 0.181754 ms
  <t> hashing: hash digest: 0.009132 ms
  <t> hashing: process full hash modules: 0.00099 ms
  <t> hashing: 0.348203 ms
      100% code generated (4 generated, 0 from cache)
  <t> record hash: 0.005316 ms
  <t> module assets: 0.008894 ms
  <t> create chunk assets: 0.341292 ms
  <t> process assets: 0.146417 ms

  LOG from webpack.FlagDependencyExportsPlugin
  <t> restore cached provided exports: 0.02019 ms
  <t> figure out provided exports: 0.070539 ms
      80% of exports of modules have been determined (1 no declared exports, 4 not cached, 0 flagged uncacheable, 0 from cache, 0 from mem cache, 0 additional calculations due to dependencies)
  <t> store provided exports into cache: 0.012175 ms

  LOG from webpack.InnerGraphPlugin
  <t> infer dependency usage: 0.035092 ms

  LOG from webpack.SideEffectsFlagPlugin
  <t> update dependencies: 0.023519 ms

  LOG from webpack.FlagDependencyUsagePlugin
  <t> initialize exports usage: 0.006943 ms
  <t> trace exports usage in graph: 0.184401 ms

  LOG from webpack.buildChunkGraph
  <t> visitModules: prepare: 0.027251 ms
  <t> visitModules: visiting: 0.050947 ms
      11 queue items processed (5 blocks)
      0 chunk groups connected
      0 chunk groups processed for merging (0 module sets, 0 forked, 0 + 0 modules forked, 0 + 0 modules merged into fork, 0 resulting modules)
      0 chunk group info updated (0 already connected chunk groups reconnected)
  <t> visitModules: 0.076421 ms
  <t> connectChunkGroups: 0.001916 ms
  <t> cleanup: 0.001701 ms

  LOG from webpack.SplitChunksPlugin
  <t> prepare: 0.016803 ms
  <t> modules: 0.085512 ms
  <t> queue: 0.002371 ms
  <t> maxSize: 0.005366 ms

  LOG from webpack.FileSystemInfo
      5 new snapshots created
      0% root snapshot uncached (0 / 0)
      0% children snapshot uncached (0 / 0)
      0 entries tested
      File info in cache: 3 timestamps 3 hashes 3 timestamp hash combinations
      File timestamp hash combination snapshot optimization: 0% (0/3) entries shared via 0 shared snapshots (0 times referenced)
      Directory info in cache: 0 timestamps 0 hashes 0 timestamp hash combinations
      Managed items info in cache: 0 items

  2021-12-05 17:44:39: nothing without module concatenation (webpack 5.64.4) compiled successfully in 34 ms (9b804d1b82671f88b91c)

nothing with module concatenation:
  PublicPath: (none)
  asset bundle1.js 5.54 KiB {179} [emitted] (name: main)
  Entrypoint main 5.54 KiB = bundle1.js
  chunk {179} (runtime: main) bundle1.js (main) 638 bytes (javascript) 937 bytes (runtime) [entry] [rendered]
    > ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":["deepEqual"]},"name":"nothing"}! main
    cacheable modules 638 bytes
      modules by path ../_helpers/*.js 132 bytes
        ../_helpers/inner-file.js?0 [326] 131 bytes {179} [depth 1] [dependent] [built] [code generated]
          [only some exports used: __usedExports, deepEqual]
          Statement (ExportNamedDeclaration) with side effects in source code at 3:0-66
          ModuleConcatenation bailout: List of module exports is dynamic (deepEqual: maybe provided (runtime-defined) and used in main)
          from origin ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":["deepEqual"]},"name":"nothing"}!
            harmony side effect evaluation ./assert [922] ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":["deepEqual"]},"name":"nothing"}! 3:0-58
            harmony import specifier ./assert [922] ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":["deepEqual"]},"name":"nothing"}! 5:7-20
          from origin ../_helpers/testModuleLoader.js?[]! + 1 modules
            harmony side effect evaluation ./assert [50] ../_helpers/testModuleLoader.js?[]! + 1 modules ./module.js 1:0-44
            harmony import specifier ./assert [50] ../_helpers/testModuleLoader.js?[]! + 1 modules ./module.js 4:1-10
          from origin ./module.js
            harmony side effect evaluation ./assert ./module.js 1:0-44
            harmony import specifier ./assert ./module.js 4:1-10
        ../_helpers/unknown.js [256] 1 bytes {179} [depth 2] [dependent] [built] [code generated]
          [used exports unknown]
          ModuleConcatenation bailout: Module is not an ECMAScript module
          [inactive] harmony side effect evaluation ./unknown [326] ../_helpers/inner-file.js?0 1:0-36
          [inactive] harmony export imported specifier ./unknown [326] ../_helpers/inner-file.js?0 1:0-36
          [inactive] harmony side effect evaluation ./unknown [326] ../_helpers/inner-file.js?0 2:0-26
          harmony export imported specifier ./unknown [326] ../_helpers/inner-file.js?0 2:0-26
      ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":["deepEqual"]},"name":"nothing"}! [922] 266 bytes {179} [depth 0] [built] [code generated]
        [no exports]
        [no exports used]
        Statement (IfStatement) with side effects in source code at 1:0-67
        ModuleConcatenation bailout: Cannot concat with ../_helpers/inner-file.js?0: Module ../_helpers/testModuleLoader.js?[]! is referenced from these modules with unsupported syntax: ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":["deepEqual"]},"name":"nothing"}! (referenced with cjs require)
        entry ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":["deepEqual"]},"name":"nothing"}! main
      ../_helpers/testModuleLoader.js?[]! + 1 modules [50] 240 bytes {179} [depth 1] [dependent] [built] [code generated]
        [exports: default]
        ModuleConcatenation bailout: Cannot concat with ../_helpers/inner-file.js?0 because of ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":["deepEqual"]},"name":"nothing"}!: List of module exports is dynamic (deepEqual: maybe provided (runtime-defined) and used in main)
        cjs require ../_helpers/testModuleLoader?[]! [922] ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":["deepEqual"]},"name":"nothing"}! 1:23-66
    runtime modules 937 bytes
      webpack/runtime/compat get default export 267 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/define property getters 308 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/hasOwnProperty shorthand 88 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/make namespace object 274 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
    

  LOG from webpack.Compiler
  <t> make hook: 22.415988 ms
  <t> finish make hook: 0.01218 ms
  <t> finish compilation: 0.271649 ms
  <t> seal compilation: 4.50274 ms
  <t> afterCompile hook: 0.009702 ms
  <t> emitAssets: 4.33365 ms
  <t> emitRecords: 0.001909 ms
  <t> done hook: 0.018185 ms
  <t> beginIdle: 0.005683 ms

  LOG from webpack.Compilation
  <t> compute affected modules: 0.005317 ms
  <t> finish modules: 0.212186 ms
  <t> report dependency errors and warnings: 0.039429 ms
  <t> optimize dependencies: 0.249958 ms
  <t> create chunks: 0.168472 ms
  <t> compute affected modules with chunk graph: 0.001891 ms
  <t> optimize: 1.035223 ms
      4 modules hashed, 0 from cache (0.8 variants per module in average)
  <t> module hashing: 0.455745 ms
      100% code generated (4 generated, 0 from cache)
  <t> code generation: 1.162456 ms
  <t> runtime requirements.modules: 0.043724 ms
  <t> runtime requirements.chunks: 0.050252 ms
  <t> runtime requirements.entries: 0.211207 ms
  <t> runtime requirements: 0.32658 ms
  <t> hashing: initialize hash: 0.002367 ms
  <t> hashing: sort chunks: 0.015817 ms
  <t> hashing: hash runtime modules: 0.133135 ms
  <t> hashing: hash chunks: 0.200416 ms
  <t> hashing: hash digest: 0.009712 ms
  <t> hashing: process full hash modules: 0.001191 ms
  <t> hashing: 0.394417 ms
      100% code generated (4 generated, 0 from cache)
  <t> record hash: 0.005641 ms
  <t> module assets: 0.011672 ms
  <t> create chunk assets: 0.334063 ms
  <t> process assets: 0.14151 ms

  LOG from webpack.FlagDependencyExportsPlugin
  <t> restore cached provided exports: 0.023698 ms
  <t> figure out provided exports: 0.103386 ms
      80% of exports of modules have been determined (1 no declared exports, 4 not cached, 0 flagged uncacheable, 0 from cache, 0 from mem cache, 0 additional calculations due to dependencies)
  <t> store provided exports into cache: 0.015072 ms

  LOG from webpack.InnerGraphPlugin
  <t> infer dependency usage: 0.047019 ms

  LOG from webpack.SideEffectsFlagPlugin
  <t> update dependencies: 0.025186 ms

  LOG from webpack.FlagDependencyUsagePlugin
  <t> initialize exports usage: 0.007375 ms
  <t> trace exports usage in graph: 0.173772 ms

  LOG from webpack.buildChunkGraph
  <t> visitModules: prepare: 0.032255 ms
  <t> visitModules: visiting: 0.060888 ms
      11 queue items processed (5 blocks)
      0 chunk groups connected
      0 chunk groups processed for merging (0 module sets, 0 forked, 0 + 0 modules forked, 0 + 0 modules merged into fork, 0 resulting modules)
      0 chunk group info updated (0 already connected chunk groups reconnected)
  <t> visitModules: 0.087053 ms
  <t> connectChunkGroups: 0.002158 ms
  <t> cleanup: 0.001451 ms

  LOG from webpack.SplitChunksPlugin
  <t> prepare: 0.016103 ms
  <t> modules: 0.084802 ms
  <t> queue: 0.00207 ms
  <t> maxSize: 0.005493 ms

  LOG from webpack.ModuleConcatenationPlugin
  <t> select relevant modules: 0.046866 ms
  <t> sort relevant modules: 0.00321 ms
  <t> find modules to concatenate: 0.09242 ms
  <t> sort concat configurations: 0.000734 ms
  <t> create concatenated modules: 0.156923 ms
  + 3 hidden lines

  LOG from webpack.FileSystemInfo
      5 new snapshots created
      0% root snapshot uncached (0 / 0)
      0% children snapshot uncached (0 / 0)
      0 entries tested
      File info in cache: 3 timestamps 3 hashes 3 timestamp hash combinations
      File timestamp hash combination snapshot optimization: 0% (0/3) entries shared via 0 shared snapshots (0 times referenced)
      Directory info in cache: 0 timestamps 0 hashes 0 timestamp hash combinations
      Managed items info in cache: 0 items

  2021-12-05 17:44:39: nothing with module concatenation (webpack 5.64.4) compiled successfully in 33 ms (d5a25077dc817647e26a)