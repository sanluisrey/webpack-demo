nothing without module concatenation:
  PublicPath: (none)
  asset bundle0.js 4.58 KiB {179} [emitted] (name: main)
  Entrypoint main 4.58 KiB = bundle0.js
  chunk {179} (runtime: main) bundle0.js (main) 508 bytes (javascript) 670 bytes (runtime) [entry] [rendered]
    > ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"any":[]},"name":"nothing"}! main
    cacheable modules 508 bytes
      ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"any":[]},"name":"nothing"}! [611] 244 bytes {179} [depth 0] [built] [code generated]
        [no exports]
        [no exports used]
        Statement (IfStatement) with side effects in source code at 1:0-67
        entry ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"any":[]},"name":"nothing"}! main
      ../_helpers/inner-file.js?0 [326] 131 bytes {179} [depth 1] [dependent] [built] [code generated]
        [only some exports used: __usedExports]
        Statement (ExportNamedDeclaration) with side effects in source code at 3:0-66
        from origin ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"any":[]},"name":"nothing"}!
          harmony side effect evaluation any [611] ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"any":[]},"name":"nothing"}! 3:0-53
          harmony import specifier any [611] ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"any":[]},"name":"nothing"}! 5:7-20
        from origin ./module.js
          harmony side effect evaluation any [662] ./module.js 1:0-33
          [inactive] harmony import specifier any [662] ./module.js 4:1-5
      ../_helpers/testModuleLoader.js?[]! [945] 47 bytes {179} [depth 1] [dependent] [built] [code generated]
        [exports: default]
        Dependency (harmony side effect evaluation) with side effects at 1:0-28
        cjs require ../_helpers/testModuleLoader?[]! [611] ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"any":[]},"name":"nothing"}! 1:23-66
      ./module.js [662] 86 bytes {179} [depth 2] [dependent] [built] [code generated]
        [exports: default]
        [no exports used]
        Dependency (harmony side effect evaluation) with side effects at 1:0-33
        harmony side effect evaluation ./module [945] ../_helpers/testModuleLoader.js?[]! 1:0-28
    runtime modules 670 bytes
      webpack/runtime/define property getters 308 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/hasOwnProperty shorthand 88 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/make namespace object 274 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
    

  LOG from webpack.Compiler
  <t> make hook: 46.1048 ms
  <t> finish make hook: 0.006564 ms
  <t> finish compilation: 0.213309 ms
  <t> seal compilation: 2.198045 ms
  <t> afterCompile hook: 0.006842 ms
  <t> emitAssets: 4.97268 ms
  <t> emitRecords: 0.001163 ms
  <t> done hook: 0.013249 ms
  <t> beginIdle: 0.004111 ms

  LOG from webpack.Compilation
  <t> compute affected modules: 0.003933 ms
  <t> finish modules: 0.163685 ms
  <t> report dependency errors and warnings: 0.030102 ms
  <t> optimize dependencies: 0.189466 ms
  <t> create chunks: 0.124785 ms
  <t> compute affected modules with chunk graph: 0.001169 ms
  <t> optimize: 0.433485 ms
      4 modules hashed, 0 from cache (0.8 variants per module in average)
  <t> module hashing: 0.097091 ms
      100% code generated (4 generated, 0 from cache)
  <t> code generation: 0.258392 ms
  <t> runtime requirements.modules: 0.032285 ms
  <t> runtime requirements.chunks: 0.032237 ms
  <t> runtime requirements.entries: 0.160612 ms
  <t> runtime requirements: 0.239714 ms
  <t> hashing: initialize hash: 0.001727 ms
  <t> hashing: sort chunks: 0.012692 ms
  <t> hashing: hash runtime modules: 0.076122 ms
  <t> hashing: hash chunks: 0.149004 ms
  <t> hashing: hash digest: 0.007842 ms
  <t> hashing: process full hash modules: 0.000778 ms
  <t> hashing: 0.2703 ms
      100% code generated (3 generated, 0 from cache)
  <t> record hash: 0.004689 ms
  <t> module assets: 0.006875 ms
  <t> create chunk assets: 0.282392 ms
  <t> process assets: 0.123748 ms

  LOG from webpack.FlagDependencyExportsPlugin
  <t> restore cached provided exports: 0.017976 ms
  <t> figure out provided exports: 0.083593 ms
      80% of exports of modules have been determined (1 no declared exports, 4 not cached, 0 flagged uncacheable, 0 from cache, 0 from mem cache, 0 additional calculations due to dependencies)
  <t> store provided exports into cache: 0.011426 ms

  LOG from webpack.InnerGraphPlugin
  <t> infer dependency usage: 0.033316 ms

  LOG from webpack.SideEffectsFlagPlugin
  <t> update dependencies: 0.019135 ms

  LOG from webpack.FlagDependencyUsagePlugin
  <t> initialize exports usage: 0.006288 ms
  <t> trace exports usage in graph: 0.133831 ms

  LOG from webpack.buildChunkGraph
  <t> visitModules: prepare: 0.022787 ms
  <t> visitModules: visiting: 0.045296 ms
      9 queue items processed (4 blocks)
      0 chunk groups connected
      0 chunk groups processed for merging (0 module sets, 0 forked, 0 + 0 modules forked, 0 + 0 modules merged into fork, 0 resulting modules)
      0 chunk group info updated (0 already connected chunk groups reconnected)
  <t> visitModules: 0.064655 ms
  <t> connectChunkGroups: 0.001424 ms
  <t> cleanup: 0.001226 ms

  LOG from webpack.SplitChunksPlugin
  <t> prepare: 0.011827 ms
  <t> modules: 0.066335 ms
  <t> queue: 0.001982 ms
  <t> maxSize: 0.004092 ms

  LOG from webpack.FileSystemInfo
      5 new snapshots created
      0% root snapshot uncached (0 / 0)
      0% children snapshot uncached (0 / 0)
      0 entries tested
      File info in cache: 3 timestamps 3 hashes 3 timestamp hash combinations
      File timestamp hash combination snapshot optimization: 0% (0/3) entries shared via 0 shared snapshots (0 times referenced)
      Directory info in cache: 0 timestamps 0 hashes 0 timestamp hash combinations
      Managed items info in cache: 0 items

  2021-12-05 17:44:36: nothing without module concatenation (webpack 5.64.4) compiled successfully in 54 ms (3a16f8f45463a7391433)

nothing with module concatenation:
  PublicPath: (none)
  asset bundle1.js 4.35 KiB {179} [emitted] (name: main)
  Entrypoint main 4.35 KiB = bundle1.js
  chunk {179} (runtime: main) bundle1.js (main) 508 bytes (javascript) 670 bytes (runtime) [entry] [rendered]
    > ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"any":[]},"name":"nothing"}! main
    cacheable modules 508 bytes
      ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"any":[]},"name":"nothing"}! [611] 244 bytes {179} [depth 0] [built] [code generated]
        [no exports]
        [no exports used]
        Statement (IfStatement) with side effects in source code at 1:0-67
        ModuleConcatenation bailout: Cannot concat with ../_helpers/inner-file.js?0: Module ../_helpers/testModuleLoader.js?[]! is referenced from these modules with unsupported syntax: ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"any":[]},"name":"nothing"}! (referenced with cjs require)
        entry ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"any":[]},"name":"nothing"}! main
      ../_helpers/inner-file.js?0 [326] 131 bytes {179} [depth 1] [dependent] [built] [code generated]
        [only some exports used: __usedExports]
        Statement (ExportNamedDeclaration) with side effects in source code at 3:0-66
        from origin ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"any":[]},"name":"nothing"}!
          harmony side effect evaluation any [611] ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"any":[]},"name":"nothing"}! 3:0-53
          harmony import specifier any [611] ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"any":[]},"name":"nothing"}! 5:7-20
        from origin ../_helpers/testModuleLoader.js?[]! + 1 modules
          harmony side effect evaluation any [878] ../_helpers/testModuleLoader.js?[]! + 1 modules ./module.js 1:0-33
          [inactive] harmony import specifier any [878] ../_helpers/testModuleLoader.js?[]! + 1 modules ./module.js 4:1-5
        from origin ./module.js
          harmony side effect evaluation any ./module.js 1:0-33
          [inactive] harmony import specifier any ./module.js 4:1-5
      ../_helpers/testModuleLoader.js?[]! + 1 modules [878] 133 bytes {179} [depth 1] [dependent] [built] [code generated]
        [exports: default]
        ModuleConcatenation bailout: Cannot concat with ../_helpers/inner-file.js?0 because of ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"any":[]},"name":"nothing"}!
        cjs require ../_helpers/testModuleLoader?[]! [611] ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"any":[]},"name":"nothing"}! 1:23-66
    runtime modules 670 bytes
      webpack/runtime/define property getters 308 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/hasOwnProperty shorthand 88 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/make namespace object 274 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
    

  LOG from webpack.Compiler
  <t> make hook: 41.192199 ms
  <t> finish make hook: 0.0074 ms
  <t> finish compilation: 0.216804 ms
  <t> seal compilation: 3.384479 ms
  <t> afterCompile hook: 0.007655 ms
  <t> emitAssets: 7.391644 ms
  <t> emitRecords: 0.001467 ms
  <t> done hook: 0.081118 ms
  <t> beginIdle: 0.00585 ms

  LOG from webpack.Compilation
  <t> compute affected modules: 0.00414 ms
  <t> finish modules: 0.168423 ms
  <t> report dependency errors and warnings: 0.028509 ms
  <t> optimize dependencies: 0.200688 ms
  <t> create chunks: 0.129764 ms
  <t> compute affected modules with chunk graph: 0.003198 ms
  <t> optimize: 0.811623 ms
      3 modules hashed, 0 from cache (0.6 variants per module in average)
  <t> module hashing: 0.165184 ms
      100% code generated (3 generated, 0 from cache)
  <t> code generation: 0.967995 ms
  <t> runtime requirements.modules: 0.030759 ms
  <t> runtime requirements.chunks: 0.036224 ms
  <t> runtime requirements.entries: 0.144286 ms
  <t> runtime requirements: 0.226865 ms
  <t> hashing: initialize hash: 0.002158 ms
  <t> hashing: sort chunks: 0.012474 ms
  <t> hashing: hash runtime modules: 0.080241 ms
  <t> hashing: hash chunks: 0.166089 ms
  <t> hashing: hash digest: 0.008417 ms
  <t> hashing: process full hash modules: 0.000893 ms
  <t> hashing: 0.294648 ms
      100% code generated (3 generated, 0 from cache)
  <t> record hash: 0.004599 ms
  <t> module assets: 0.008666 ms
  <t> create chunk assets: 0.286431 ms
  <t> process assets: 0.118138 ms

  LOG from webpack.FlagDependencyExportsPlugin
  <t> restore cached provided exports: 0.020118 ms
  <t> figure out provided exports: 0.082854 ms
      80% of exports of modules have been determined (1 no declared exports, 4 not cached, 0 flagged uncacheable, 0 from cache, 0 from mem cache, 0 additional calculations due to dependencies)
  <t> store provided exports into cache: 0.011574 ms

  LOG from webpack.InnerGraphPlugin
  <t> infer dependency usage: 0.04245 ms

  LOG from webpack.SideEffectsFlagPlugin
  <t> update dependencies: 0.020578 ms

  LOG from webpack.FlagDependencyUsagePlugin
  <t> initialize exports usage: 0.006263 ms
  <t> trace exports usage in graph: 0.141075 ms

  LOG from webpack.buildChunkGraph
  <t> visitModules: prepare: 0.023076 ms
  <t> visitModules: visiting: 0.046893 ms
      9 queue items processed (4 blocks)
      0 chunk groups connected
      0 chunk groups processed for merging (0 module sets, 0 forked, 0 + 0 modules forked, 0 + 0 modules merged into fork, 0 resulting modules)
      0 chunk group info updated (0 already connected chunk groups reconnected)
  <t> visitModules: 0.067207 ms
  <t> connectChunkGroups: 0.001901 ms
  <t> cleanup: 0.001413 ms

  LOG from webpack.SplitChunksPlugin
  <t> prepare: 0.013986 ms
  <t> modules: 0.067208 ms
  <t> queue: 0.001686 ms
  <t> maxSize: 0.005232 ms

  LOG from webpack.ModuleConcatenationPlugin
  <t> select relevant modules: 0.022838 ms
  <t> sort relevant modules: 0.003255 ms
  <t> find modules to concatenate: 0.116934 ms
  <t> sort concat configurations: 0.000525 ms
  <t> create concatenated modules: 0.124802 ms
  + 3 hidden lines

  LOG from webpack.FileSystemInfo
      5 new snapshots created
      0% root snapshot uncached (0 / 0)
      0% children snapshot uncached (0 / 0)
      0 entries tested
      File info in cache: 3 timestamps 3 hashes 3 timestamp hash combinations
      File timestamp hash combination snapshot optimization: 0% (0/3) entries shared via 0 shared snapshots (0 times referenced)
      Directory info in cache: 0 timestamps 0 hashes 0 timestamp hash combinations
      Managed items info in cache: 0 items

  2021-12-05 17:44:36: nothing with module concatenation (webpack 5.64.4) compiled successfully in 53 ms (ac506c1a38eb94e2633a)

default without module concatenation:
  PublicPath: (none)
  asset bundle2.js 5.91 KiB {179} [emitted] (name: main)
  Entrypoint main 5.91 KiB = bundle2.js
  chunk {179} (runtime: main) bundle2.js (main) 566 bytes (javascript) 937 bytes (runtime) [entry] [rendered]
    > ../_helpers/entryLoader.js?{"usedExports":["default"],"expect":{"any":["fun1"]},"name":"default"}! main
    cacheable modules 566 bytes
      modules by path ../_helpers/*.js 132 bytes
        ../_helpers/inner-file.js?0 [326] 131 bytes {179} [depth 1] [dependent] [built] [code generated]
          [only some exports used: __usedExports, fun1]
          Statement (ExportNamedDeclaration) with side effects in source code at 3:0-66
          from origin ../_helpers/entryLoader.js?{"usedExports":["default"],"expect":{"any":["fun1"]},"name":"default"}!
            harmony side effect evaluation any [877] ../_helpers/entryLoader.js?{"usedExports":["default"],"expect":{"any":["fun1"]},"name":"default"}! 3:0-53
            harmony import specifier any [877] ../_helpers/entryLoader.js?{"usedExports":["default"],"expect":{"any":["fun1"]},"name":"default"}! 5:7-20
          from origin ./module.js
            harmony side effect evaluation any [662] ./module.js 1:0-33
            harmony import specifier any [662] ./module.js 4:1-5
        ../_helpers/unknown.js [256] 1 bytes {179} [depth 2] [dependent] [built] [code generated]
          [used exports unknown]
          [inactive] harmony side effect evaluation ./unknown [326] ../_helpers/inner-file.js?0 1:0-36
          [inactive] harmony export imported specifier ./unknown [326] ../_helpers/inner-file.js?0 1:0-36
          [inactive] harmony side effect evaluation ./unknown [326] ../_helpers/inner-file.js?0 2:0-26
          harmony export imported specifier ./unknown [326] ../_helpers/inner-file.js?0 2:0-26
      ../_helpers/entryLoader.js?{"usedExports":["default"],"expect":{"any":["fun1"]},"name":"default"}! [877] 262 bytes {179} [depth 0] [built] [code generated]
        [no exports]
        [no exports used]
        Statement (IfStatement) with side effects in source code at 1:0-78
        entry ../_helpers/entryLoader.js?{"usedExports":["default"],"expect":{"any":["fun1"]},"name":"default"}! main
      ../_helpers/testModuleLoader.js?["default"]! [331] 86 bytes {179} [depth 1] [dependent] [built] [code generated]
        [exports: default]
        Statement (ExportDefaultDeclaration) with side effects in source code at 2:0-32
        cjs require ../_helpers/testModuleLoader?["default"]! [877] ../_helpers/entryLoader.js?{"usedExports":["default"],"expect":{"any":["fun1"]},"name":"default"}! 1:23-77
      ./module.js [662] 86 bytes {179} [depth 2] [dependent] [built] [code generated]
        [exports: default]
        [all exports used]
        Dependency (harmony side effect evaluation) with side effects at 1:0-33
        harmony side effect evaluation ./module [331] ../_helpers/testModuleLoader.js?["default"]! 1:0-53
        harmony import specifier ./module [331] ../_helpers/testModuleLoader.js?["default"]! 2:16-30
    runtime modules 937 bytes
      webpack/runtime/compat get default export 267 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/define property getters 308 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/hasOwnProperty shorthand 88 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/make namespace object 274 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
    

  LOG from webpack.Compiler
  <t> make hook: 35.963372 ms
  <t> finish make hook: 0.010892 ms
  <t> finish compilation: 0.248623 ms
  <t> seal compilation: 3.370341 ms
  <t> afterCompile hook: 0.007663 ms
  <t> emitAssets: 11.471718 ms
  <t> emitRecords: 0.001812 ms
  <t> done hook: 0.018574 ms
  <t> beginIdle: 0.004873 ms

  LOG from webpack.Compilation
  <t> compute affected modules: 0.004487 ms
  <t> finish modules: 0.19031 ms
  <t> report dependency errors and warnings: 0.043011 ms
  <t> optimize dependencies: 0.246605 ms
  <t> create chunks: 0.152222 ms
  <t> compute affected modules with chunk graph: 0.001602 ms
  <t> optimize: 0.50465 ms
      5 modules hashed, 0 from cache (1 variants per module in average)
  <t> module hashing: 0.139837 ms
      100% code generated (5 generated, 0 from cache)
  <t> code generation: 0.408714 ms
  <t> runtime requirements.modules: 0.038797 ms
  <t> runtime requirements.chunks: 0.052695 ms
  <t> runtime requirements.entries: 0.202163 ms
  <t> runtime requirements: 0.310045 ms
  <t> hashing: initialize hash: 0.002123 ms
  <t> hashing: sort chunks: 0.013578 ms
  <t> hashing: hash runtime modules: 0.632427 ms
  <t> hashing: hash chunks: 0.192215 ms
  <t> hashing: hash digest: 0.008431 ms
  <t> hashing: process full hash modules: 0.000988 ms
  <t> hashing: 0.875438 ms
      100% code generated (4 generated, 0 from cache)
  <t> record hash: 0.005135 ms
  <t> module assets: 0.010263 ms
  <t> create chunk assets: 0.334311 ms
  <t> process assets: 0.150236 ms

  LOG from webpack.FlagDependencyExportsPlugin
  <t> restore cached provided exports: 0.021833 ms
  <t> figure out provided exports: 0.098654 ms
      80% of exports of modules have been determined (1 no declared exports, 4 not cached, 0 flagged uncacheable, 0 from cache, 0 from mem cache, 0 additional calculations due to dependencies)
  <t> store provided exports into cache: 0.012822 ms

  LOG from webpack.InnerGraphPlugin
  <t> infer dependency usage: 0.03058 ms

  LOG from webpack.SideEffectsFlagPlugin
  <t> update dependencies: 0.018895 ms

  LOG from webpack.FlagDependencyUsagePlugin
  <t> initialize exports usage: 0.005701 ms
  <t> trace exports usage in graph: 0.187179 ms

  LOG from webpack.buildChunkGraph
  <t> visitModules: prepare: 0.032171 ms
  <t> visitModules: visiting: 0.06221 ms
      11 queue items processed (5 blocks)
      0 chunk groups connected
      0 chunk groups processed for merging (0 module sets, 0 forked, 0 + 0 modules forked, 0 + 0 modules merged into fork, 0 resulting modules)
      0 chunk group info updated (0 already connected chunk groups reconnected)
  <t> visitModules: 0.083416 ms
  <t> connectChunkGroups: 0.001823 ms
  <t> cleanup: 0.001489 ms

  LOG from webpack.SplitChunksPlugin
  <t> prepare: 0.014459 ms
  <t> modules: 0.076846 ms
  <t> queue: 0.002027 ms
  <t> maxSize: 0.005024 ms

  LOG from webpack.FileSystemInfo
      5 new snapshots created
      0% root snapshot uncached (0 / 0)
      0% children snapshot uncached (0 / 0)
      0 entries tested
      File info in cache: 3 timestamps 3 hashes 3 timestamp hash combinations
      File timestamp hash combination snapshot optimization: 0% (0/3) entries shared via 0 shared snapshots (0 times referenced)
      Directory info in cache: 0 timestamps 0 hashes 0 timestamp hash combinations
      Managed items info in cache: 0 items

  2021-12-05 17:44:36: default without module concatenation (webpack 5.64.4) compiled successfully in 52 ms (ce5160d54e009add2a0f)

default with module concatenation:
  PublicPath: (none)
  asset bundle3.js 5.5 KiB {179} [emitted] (name: main)
  Entrypoint main 5.5 KiB = bundle3.js
  chunk {179} (runtime: main) bundle3.js (main) 566 bytes (javascript) 937 bytes (runtime) [entry] [rendered]
    > ../_helpers/entryLoader.js?{"usedExports":["default"],"expect":{"any":["fun1"]},"name":"default"}! main
    cacheable modules 566 bytes
      modules by path ../_helpers/*.js 132 bytes
        ../_helpers/inner-file.js?0 [326] 131 bytes {179} [depth 1] [dependent] [built] [code generated]
          [only some exports used: __usedExports, fun1]
          Statement (ExportNamedDeclaration) with side effects in source code at 3:0-66
          ModuleConcatenation bailout: List of module exports is dynamic (fun1: maybe provided (runtime-defined) and used in main)
          from origin ../_helpers/entryLoader.js?{"usedExports":["default"],"expect":{"any":["fun1"]},"name":"default"}!
            harmony side effect evaluation any [877] ../_helpers/entryLoader.js?{"usedExports":["default"],"expect":{"any":["fun1"]},"name":"default"}! 3:0-53
            harmony import specifier any [877] ../_helpers/entryLoader.js?{"usedExports":["default"],"expect":{"any":["fun1"]},"name":"default"}! 5:7-20
          from origin ../_helpers/testModuleLoader.js?["default"]! + 1 modules
            harmony side effect evaluation any [101] ../_helpers/testModuleLoader.js?["default"]! + 1 modules ./module.js 1:0-33
            harmony import specifier any [101] ../_helpers/testModuleLoader.js?["default"]! + 1 modules ./module.js 4:1-5
          from origin ./module.js
            harmony side effect evaluation any ./module.js 1:0-33
            harmony import specifier any ./module.js 4:1-5
        ../_helpers/unknown.js [256] 1 bytes {179} [depth 2] [dependent] [built] [code generated]
          [used exports unknown]
          ModuleConcatenation bailout: Module is not an ECMAScript module
          [inactive] harmony side effect evaluation ./unknown [326] ../_helpers/inner-file.js?0 1:0-36
          [inactive] harmony export imported specifier ./unknown [326] ../_helpers/inner-file.js?0 1:0-36
          [inactive] harmony side effect evaluation ./unknown [326] ../_helpers/inner-file.js?0 2:0-26
          harmony export imported specifier ./unknown [326] ../_helpers/inner-file.js?0 2:0-26
      ../_helpers/entryLoader.js?{"usedExports":["default"],"expect":{"any":["fun1"]},"name":"default"}! [877] 262 bytes {179} [depth 0] [built] [code generated]
        [no exports]
        [no exports used]
        Statement (IfStatement) with side effects in source code at 1:0-78
        ModuleConcatenation bailout: Cannot concat with ../_helpers/inner-file.js?0: Module ../_helpers/testModuleLoader.js?["default"]! is referenced from these modules with unsupported syntax: ../_helpers/entryLoader.js?{"usedExports":["default"],"expect":{"any":["fun1"]},"name":"default"}! (referenced with cjs require)
        entry ../_helpers/entryLoader.js?{"usedExports":["default"],"expect":{"any":["fun1"]},"name":"default"}! main
      ../_helpers/testModuleLoader.js?["default"]! + 1 modules [101] 172 bytes {179} [depth 1] [dependent] [built] [code generated]
        [exports: default]
        ModuleConcatenation bailout: Cannot concat with ../_helpers/inner-file.js?0 because of ../_helpers/entryLoader.js?{"usedExports":["default"],"expect":{"any":["fun1"]},"name":"default"}!: List of module exports is dynamic (fun1: maybe provided (runtime-defined) and used in main)
        cjs require ../_helpers/testModuleLoader?["default"]! [877] ../_helpers/entryLoader.js?{"usedExports":["default"],"expect":{"any":["fun1"]},"name":"default"}! 1:23-77
    runtime modules 937 bytes
      webpack/runtime/compat get default export 267 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/define property getters 308 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/hasOwnProperty shorthand 88 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/make namespace object 274 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
    

  LOG from webpack.Compiler
  <t> make hook: 46.039884 ms
  <t> finish make hook: 0.006437 ms
  <t> finish compilation: 0.190205 ms
  <t> seal compilation: 3.441545 ms
  <t> afterCompile hook: 0.007478 ms
  <t> emitAssets: 1.151469 ms
  <t> emitRecords: 0.000747 ms
  <t> done hook: 0.019092 ms
  <t> beginIdle: 0.003038 ms

  LOG from webpack.Compilation
  <t> compute affected modules: 0.002706 ms
  <t> finish modules: 0.147744 ms
  <t> report dependency errors and warnings: 0.031278 ms
  <t> optimize dependencies: 0.213893 ms
  <t> create chunks: 0.209023 ms
  <t> compute affected modules with chunk graph: 0.001083 ms
  <t> optimize: 0.776247 ms
      4 modules hashed, 0 from cache (0.8 variants per module in average)
  <t> module hashing: 0.169332 ms
      100% code generated (4 generated, 0 from cache)
  <t> code generation: 0.930265 ms
  <t> runtime requirements.modules: 0.035222 ms
  <t> runtime requirements.chunks: 0.048918 ms
  <t> runtime requirements.entries: 0.147155 ms
  <t> runtime requirements: 0.246212 ms
  <t> hashing: initialize hash: 0.001968 ms
  <t> hashing: sort chunks: 0.012964 ms
  <t> hashing: hash runtime modules: 0.097996 ms
  <t> hashing: hash chunks: 0.162397 ms
  <t> hashing: hash digest: 0.008652 ms
  <t> hashing: process full hash modules: 0.000935 ms
  <t> hashing: 0.309967 ms
      100% code generated (4 generated, 0 from cache)
  <t> record hash: 0.004944 ms
  <t> module assets: 0.007532 ms
  <t> create chunk assets: 0.282113 ms
  <t> process assets: 0.129678 ms

  LOG from webpack.FlagDependencyExportsPlugin
  <t> restore cached provided exports: 0.016517 ms
  <t> figure out provided exports: 0.073887 ms
      80% of exports of modules have been determined (1 no declared exports, 4 not cached, 0 flagged uncacheable, 0 from cache, 0 from mem cache, 0 additional calculations due to dependencies)
  <t> store provided exports into cache: 0.010098 ms

  LOG from webpack.InnerGraphPlugin
  <t> infer dependency usage: 0.035982 ms

  LOG from webpack.SideEffectsFlagPlugin
  <t> update dependencies: 0.015516 ms

  LOG from webpack.FlagDependencyUsagePlugin
  <t> initialize exports usage: 0.005849 ms
  <t> trace exports usage in graph: 0.162754 ms

  LOG from webpack.buildChunkGraph
  <t> visitModules: prepare: 0.028089 ms
  <t> visitModules: visiting: 0.053853 ms
      11 queue items processed (5 blocks)
      0 chunk groups connected
      0 chunk groups processed for merging (0 module sets, 0 forked, 0 + 0 modules forked, 0 + 0 modules merged into fork, 0 resulting modules)
      0 chunk group info updated (0 already connected chunk groups reconnected)
  <t> visitModules: 0.077066 ms
  <t> connectChunkGroups: 0.001543 ms
  <t> cleanup: 0.010088 ms

  LOG from webpack.SplitChunksPlugin
  <t> prepare: 0.01291 ms
  <t> modules: 0.079737 ms
  <t> queue: 0.001944 ms
  <t> maxSize: 0.004238 ms

  LOG from webpack.ModuleConcatenationPlugin
  <t> select relevant modules: 0.041323 ms
  <t> sort relevant modules: 0.002852 ms
  <t> find modules to concatenate: 0.108201 ms
  <t> sort concat configurations: 0.00058 ms
  <t> create concatenated modules: 0.107376 ms
  + 3 hidden lines

  LOG from webpack.FileSystemInfo
      5 new snapshots created
      0% root snapshot uncached (0 / 0)
      0% children snapshot uncached (0 / 0)
      0 entries tested
      File info in cache: 3 timestamps 3 hashes 3 timestamp hash combinations
      File timestamp hash combination snapshot optimization: 0% (0/3) entries shared via 0 shared snapshots (0 times referenced)
      Directory info in cache: 0 timestamps 0 hashes 0 timestamp hash combinations
      Managed items info in cache: 0 items

  2021-12-05 17:44:36: default with module concatenation (webpack 5.64.4) compiled successfully in 51 ms (50b0fae60fa487ffe014)