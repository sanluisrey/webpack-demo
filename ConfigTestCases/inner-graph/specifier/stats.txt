nothing without module concatenation:
  PublicPath: (none)
  asset bundle0.js 4.62 KiB {179} [emitted] (name: main)
  Entrypoint main 4.62 KiB = bundle0.js
  chunk {179} (runtime: main) bundle0.js (main) 655 bytes (javascript) 670 bytes (runtime) [entry] [rendered]
    > ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":[]},"name":"nothing"}! main
    cacheable modules 655 bytes
      ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":[]},"name":"nothing"}! [951] 254 bytes {179} [depth 0] [built] [code generated]
        [no exports]
        [no exports used]
        Statement (IfStatement) with side effects in source code at 1:0-67
        entry ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":[]},"name":"nothing"}! main
      ../_helpers/inner-file.js?0 [326] 131 bytes {179} [depth 1] [dependent] [built] [code generated]
        [only some exports used: __usedExports]
        Statement (ExportNamedDeclaration) with side effects in source code at 3:0-66
        from origin ./module.js
          harmony side effect evaluation ./assert [662] ./module.js 1:0-50
          [inactive] harmony import specifier ./assert [662] ./module.js 5:2-4
          [inactive] harmony import specifier ./assert [662] ./module.js 7:1-10
          [inactive] harmony import specifier ./assert [662] ./module.js 12:1-10
        from origin ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":[]},"name":"nothing"}!
          harmony side effect evaluation ./assert [951] ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":[]},"name":"nothing"}! 3:0-58
          harmony import specifier ./assert [951] ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":[]},"name":"nothing"}! 5:7-20
      ../_helpers/testModuleLoader.js?[]! [945] 47 bytes {179} [depth 1] [dependent] [built] [code generated]
        [exports: default]
        Dependency (harmony side effect evaluation) with side effects at 1:0-28
        cjs require ../_helpers/testModuleLoader?[]! [951] ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":[]},"name":"nothing"}! 1:23-66
      ./module.js [662] 223 bytes {179} [depth 2] [dependent] [built] [code generated]
        [exports: fun1, fun2]
        [no exports used]
        Dependency (harmony side effect evaluation) with side effects at 1:0-50
        harmony side effect evaluation ./module [945] ../_helpers/testModuleLoader.js?[]! 1:0-28
    runtime modules 670 bytes
      webpack/runtime/define property getters 308 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/hasOwnProperty shorthand 88 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/make namespace object 274 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
    

  LOG from webpack.Compiler
  <t> make hook: 89.74137 ms
  <t> finish make hook: 0.01393 ms
  <t> finish compilation: 0.312929 ms
  <t> seal compilation: 2.984225 ms
  <t> afterCompile hook: 0.008946 ms
  <t> emitAssets: 37.312592 ms
  <t> emitRecords: 0.000785 ms
  <t> done hook: 0.009654 ms
  <t> beginIdle: 0.003016 ms

  LOG from webpack.Compilation
  <t> compute affected modules: 0.005348 ms
  <t> finish modules: 0.239135 ms
  <t> report dependency errors and warnings: 0.05205 ms
  <t> optimize dependencies: 0.227132 ms
  <t> create chunks: 0.181806 ms
  <t> compute affected modules with chunk graph: 0.00168 ms
  <t> optimize: 0.64062 ms
      4 modules hashed, 0 from cache (0.8 variants per module in average)
  <t> module hashing: 0.161198 ms
      100% code generated (4 generated, 0 from cache)
  <t> code generation: 0.370936 ms
  <t> runtime requirements.modules: 0.05453 ms
  <t> runtime requirements.chunks: 0.041887 ms
  <t> runtime requirements.entries: 0.19137 ms
  <t> runtime requirements: 0.3089 ms
  <t> hashing: initialize hash: 0.002415 ms
  <t> hashing: sort chunks: 0.015358 ms
  <t> hashing: hash runtime modules: 0.105057 ms
  <t> hashing: hash chunks: 0.185599 ms
  <t> hashing: hash digest: 0.009219 ms
  <t> hashing: process full hash modules: 0.001073 ms
  <t> hashing: 0.3545 ms
      100% code generated (3 generated, 0 from cache)
  <t> record hash: 0.005149 ms
  <t> module assets: 0.010527 ms
  <t> create chunk assets: 0.360711 ms
  <t> process assets: 0.146844 ms

  LOG from webpack.FlagDependencyExportsPlugin
  <t> restore cached provided exports: 0.030479 ms
  <t> figure out provided exports: 0.107669 ms
      80% of exports of modules have been determined (1 no declared exports, 4 not cached, 0 flagged uncacheable, 0 from cache, 0 from mem cache, 0 additional calculations due to dependencies)
  <t> store provided exports into cache: 0.020102 ms

  LOG from webpack.InnerGraphPlugin
  <t> infer dependency usage: 0.029539 ms

  LOG from webpack.SideEffectsFlagPlugin
  <t> update dependencies: 0.032159 ms

  LOG from webpack.FlagDependencyUsagePlugin
  <t> initialize exports usage: 0.007637 ms
  <t> trace exports usage in graph: 0.139959 ms

  LOG from webpack.buildChunkGraph
  <t> visitModules: prepare: 0.026191 ms
  <t> visitModules: visiting: 0.051041 ms
      9 queue items processed (4 blocks)
      0 chunk groups connected
      0 chunk groups processed for merging (0 module sets, 0 forked, 0 + 0 modules forked, 0 + 0 modules merged into fork, 0 resulting modules)
      0 chunk group info updated (0 already connected chunk groups reconnected)
  <t> visitModules: 0.100344 ms
  <t> connectChunkGroups: 0.002092 ms
  <t> cleanup: 0.00199 ms

  LOG from webpack.SplitChunksPlugin
  <t> prepare: 0.016673 ms
  <t> modules: 0.078285 ms
  <t> queue: 0.002312 ms
  <t> maxSize: 0.006067 ms

  LOG from webpack.FileSystemInfo
      5 new snapshots created
      0% root snapshot uncached (0 / 0)
      0% children snapshot uncached (0 / 0)
      0 entries tested
      File info in cache: 3 timestamps 3 hashes 3 timestamp hash combinations
      File timestamp hash combination snapshot optimization: 0% (0/3) entries shared via 0 shared snapshots (0 times referenced)
      Directory info in cache: 0 timestamps 0 hashes 0 timestamp hash combinations
      Managed items info in cache: 0 items

  2021-12-05 17:44:40: nothing without module concatenation (webpack 5.64.4) compiled successfully in 132 ms (b76b389e94d01b037741)

nothing with module concatenation:
  PublicPath: (none)
  asset bundle1.js 4.38 KiB {179} [emitted] (name: main)
  Entrypoint main 4.38 KiB = bundle1.js
  chunk {179} (runtime: main) bundle1.js (main) 655 bytes (javascript) 670 bytes (runtime) [entry] [rendered]
    > ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":[]},"name":"nothing"}! main
    cacheable modules 655 bytes
      ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":[]},"name":"nothing"}! [951] 254 bytes {179} [depth 0] [built] [code generated]
        [no exports]
        [no exports used]
        Statement (IfStatement) with side effects in source code at 1:0-67
        ModuleConcatenation bailout: Cannot concat with ../_helpers/inner-file.js?0: Module ../_helpers/testModuleLoader.js?[]! is referenced from these modules with unsupported syntax: ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":[]},"name":"nothing"}! (referenced with cjs require)
        entry ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":[]},"name":"nothing"}! main
      ../_helpers/inner-file.js?0 [326] 131 bytes {179} [depth 1] [dependent] [built] [code generated]
        [only some exports used: __usedExports]
        Statement (ExportNamedDeclaration) with side effects in source code at 3:0-66
        from origin ../_helpers/testModuleLoader.js?[]! + 1 modules
          harmony side effect evaluation ./assert [169] ../_helpers/testModuleLoader.js?[]! + 1 modules ./module.js 1:0-50
          [inactive] harmony import specifier ./assert [169] ../_helpers/testModuleLoader.js?[]! + 1 modules ./module.js 5:2-4
          [inactive] harmony import specifier ./assert [169] ../_helpers/testModuleLoader.js?[]! + 1 modules ./module.js 7:1-10
          [inactive] harmony import specifier ./assert [169] ../_helpers/testModuleLoader.js?[]! + 1 modules ./module.js 12:1-10
        from origin ./module.js
          harmony side effect evaluation ./assert ./module.js 1:0-50
          [inactive] harmony import specifier ./assert ./module.js 5:2-4
          [inactive] harmony import specifier ./assert ./module.js 7:1-10
          [inactive] harmony import specifier ./assert ./module.js 12:1-10
        from origin ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":[]},"name":"nothing"}!
          harmony side effect evaluation ./assert [951] ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":[]},"name":"nothing"}! 3:0-58
          harmony import specifier ./assert [951] ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":[]},"name":"nothing"}! 5:7-20
      ../_helpers/testModuleLoader.js?[]! + 1 modules [169] 270 bytes {179} [depth 1] [dependent] [built] [code generated]
        [exports: default]
        ModuleConcatenation bailout: Cannot concat with ../_helpers/inner-file.js?0 because of ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":[]},"name":"nothing"}!
        cjs require ../_helpers/testModuleLoader?[]! [951] ../_helpers/entryLoader.js?{"usedExports":[],"expect":{"./assert":[]},"name":"nothing"}! 1:23-66
    runtime modules 670 bytes
      webpack/runtime/define property getters 308 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/hasOwnProperty shorthand 88 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/make namespace object 274 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
    

  LOG from webpack.Compiler
  <t> make hook: 96.278407 ms
  <t> finish make hook: 0.012064 ms
  <t> finish compilation: 0.212363 ms
  <t> seal compilation: 4.319821 ms
  <t> afterCompile hook: 0.013227 ms
  <t> emitAssets: 28.326707 ms
  <t> emitRecords: 0.001291 ms
  <t> done hook: 0.013049 ms
  <t> beginIdle: 0.004309 ms

  LOG from webpack.Compilation
  <t> compute affected modules: 0.00447 ms
  <t> finish modules: 0.163732 ms
  <t> report dependency errors and warnings: 0.030989 ms
  <t> optimize dependencies: 0.176703 ms
  <t> create chunks: 0.130416 ms
  <t> compute affected modules with chunk graph: 0.001583 ms
  <t> optimize: 0.809845 ms
      3 modules hashed, 0 from cache (0.6 variants per module in average)
  <t> module hashing: 0.181003 ms
      100% code generated (3 generated, 0 from cache)
  <t> code generation: 0.927929 ms
  <t> runtime requirements.modules: 0.03303 ms
  <t> runtime requirements.chunks: 0.039031 ms
  <t> runtime requirements.entries: 0.13783 ms
  <t> runtime requirements: 0.229598 ms
  <t> hashing: initialize hash: 0.00202 ms
  <t> hashing: sort chunks: 0.014116 ms
  <t> hashing: hash runtime modules: 0.088776 ms
  <t> hashing: hash chunks: 0.291854 ms
  <t> hashing: hash digest: 0.01257 ms
  <t> hashing: process full hash modules: 0.001226 ms
  <t> hashing: 0.446181 ms
      100% code generated (3 generated, 0 from cache)
  <t> record hash: 0.015091 ms
  <t> module assets: 0.016737 ms
  <t> create chunk assets: 0.468361 ms
  <t> process assets: 0.259 ms

  LOG from webpack.FlagDependencyExportsPlugin
  <t> restore cached provided exports: 0.019781 ms
  <t> figure out provided exports: 0.068663 ms
      80% of exports of modules have been determined (1 no declared exports, 4 not cached, 0 flagged uncacheable, 0 from cache, 0 from mem cache, 0 additional calculations due to dependencies)
  <t> store provided exports into cache: 0.014709 ms

  LOG from webpack.InnerGraphPlugin
  <t> infer dependency usage: 0.037732 ms

  LOG from webpack.SideEffectsFlagPlugin
  <t> update dependencies: 0.023336 ms

  LOG from webpack.FlagDependencyUsagePlugin
  <t> initialize exports usage: 0.0068 ms
  <t> trace exports usage in graph: 0.110296 ms

  LOG from webpack.buildChunkGraph
  <t> visitModules: prepare: 0.020667 ms
  <t> visitModules: visiting: 0.038595 ms
      9 queue items processed (4 blocks)
      0 chunk groups connected
      0 chunk groups processed for merging (0 module sets, 0 forked, 0 + 0 modules forked, 0 + 0 modules merged into fork, 0 resulting modules)
      0 chunk group info updated (0 already connected chunk groups reconnected)
  <t> visitModules: 0.062399 ms
  <t> connectChunkGroups: 0.002088 ms
  <t> cleanup: 0.001587 ms

  LOG from webpack.SplitChunksPlugin
  <t> prepare: 0.013831 ms
  <t> modules: 0.066601 ms
  <t> queue: 0.002146 ms
  <t> maxSize: 0.005476 ms

  LOG from webpack.ModuleConcatenationPlugin
  <t> select relevant modules: 0.025667 ms
  <t> sort relevant modules: 0.00362 ms
  <t> find modules to concatenate: 0.104096 ms
  <t> sort concat configurations: 0.000719 ms
  <t> create concatenated modules: 0.135512 ms
  + 3 hidden lines

  LOG from webpack.FileSystemInfo
      5 new snapshots created
      0% root snapshot uncached (0 / 0)
      0% children snapshot uncached (0 / 0)
      0 entries tested
      File info in cache: 3 timestamps 3 hashes 3 timestamp hash combinations
      File timestamp hash combination snapshot optimization: 0% (0/3) entries shared via 0 shared snapshots (0 times referenced)
      Directory info in cache: 0 timestamps 0 hashes 0 timestamp hash combinations
      Managed items info in cache: 0 items

  2021-12-05 17:44:40: nothing with module concatenation (webpack 5.64.4) compiled successfully in 131 ms (9533d8e450bcc413a268)

fun1 without module concatenation:
  PublicPath: (none)
  asset bundle2.js 6.33 KiB {179} [emitted] (name: main)
  Entrypoint main 6.33 KiB = bundle2.js
  chunk {179} (runtime: main) bundle2.js (main) 711 bytes (javascript) 937 bytes (runtime) [entry] [rendered]
    > ../_helpers/entryLoader.js?{"usedExports":["fun1"],"expect":{"./assert":["deepEqual","equal"]},"name":"fun1"}! main
    cacheable modules 711 bytes
      modules by path ../_helpers/*.js 132 bytes
        ../_helpers/inner-file.js?0 [326] 131 bytes {179} [depth 1] [dependent] [built] [code generated]
          [only some exports used: __usedExports, deepEqual, equal]
          Statement (ExportNamedDeclaration) with side effects in source code at 3:0-66
          from origin ./module.js
            harmony side effect evaluation ./assert [662] ./module.js 1:0-50
            harmony import specifier ./assert [662] ./module.js 5:2-4
            harmony import specifier ./assert [662] ./module.js 7:1-10
            [inactive] harmony import specifier ./assert [662] ./module.js 12:1-10
          from origin ../_helpers/entryLoader.js?{"usedExports":["fun1"],"expect":{"./assert":["deepEqual","equal"]},"name":"fun1"}!
            harmony side effect evaluation ./assert [729] ../_helpers/entryLoader.js?{"usedExports":["fun1"],"expect":{"./assert":["deepEqual","equal"]},"name":"fun1"}! 3:0-58
            harmony import specifier ./assert [729] ../_helpers/entryLoader.js?{"usedExports":["fun1"],"expect":{"./assert":["deepEqual","equal"]},"name":"fun1"}! 5:7-20
        ../_helpers/unknown.js [256] 1 bytes {179} [depth 2] [dependent] [built] [code generated]
          [used exports unknown]
          [inactive] harmony side effect evaluation ./unknown [326] ../_helpers/inner-file.js?0 1:0-36
          [inactive] harmony export imported specifier ./unknown [326] ../_helpers/inner-file.js?0 1:0-36
          [inactive] harmony side effect evaluation ./unknown [326] ../_helpers/inner-file.js?0 2:0-26
          harmony export imported specifier ./unknown [326] ../_helpers/inner-file.js?0 2:0-26
      ../_helpers/entryLoader.js?{"usedExports":["fun1"],"expect":{"./assert":["deepEqual","equal"]},"name":"fun1"}! [729] 279 bytes {179} [depth 0] [built] [code generated]
        [no exports]
        [no exports used]
        Statement (IfStatement) with side effects in source code at 1:0-75
        entry ../_helpers/entryLoader.js?{"usedExports":["fun1"],"expect":{"./assert":["deepEqual","equal"]},"name":"fun1"}! main
      ../_helpers/testModuleLoader.js?["fun1"]! [961] 77 bytes {179} [depth 1] [dependent] [built] [code generated]
        [exports: default]
        Statement (ExportDefaultDeclaration) with side effects in source code at 2:0-29
        cjs require ../_helpers/testModuleLoader?["fun1"]! [729] ../_helpers/entryLoader.js?{"usedExports":["fun1"],"expect":{"./assert":["deepEqual","equal"]},"name":"fun1"}! 1:23-74
      ./module.js [662] 223 bytes {179} [depth 2] [dependent] [built] [code generated]
        [exports: fun1, fun2]
        [only some exports used: fun1]
        Dependency (harmony side effect evaluation) with side effects at 1:0-50
        harmony side effect evaluation ./module [961] ../_helpers/testModuleLoader.js?["fun1"]! 1:0-47
        harmony import specifier ./module [961] ../_helpers/testModuleLoader.js?["fun1"]! 2:16-27
    runtime modules 937 bytes
      webpack/runtime/compat get default export 267 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/define property getters 308 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/hasOwnProperty shorthand 88 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/make namespace object 274 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
    

  LOG from webpack.Compiler
  <t> make hook: 90.962776 ms
  <t> finish make hook: 0.0073 ms
  <t> finish compilation: 0.202471 ms
  <t> seal compilation: 3.264286 ms
  <t> afterCompile hook: 0.008741 ms
  <t> emitAssets: 33.604116 ms
  <t> emitRecords: 0.00169 ms
  <t> done hook: 0.016609 ms
  <t> beginIdle: 0.004762 ms

  LOG from webpack.Compilation
  <t> compute affected modules: 0.003424 ms
  <t> finish modules: 0.154572 ms
  <t> report dependency errors and warnings: 0.029481 ms
  <t> optimize dependencies: 0.234472 ms
  <t> create chunks: 0.135103 ms
  <t> compute affected modules with chunk graph: 0.001418 ms
  <t> optimize: 0.515981 ms
      5 modules hashed, 0 from cache (1 variants per module in average)
  <t> module hashing: 0.138225 ms
      100% code generated (5 generated, 0 from cache)
  <t> code generation: 0.821526 ms
  <t> runtime requirements.modules: 0.039009 ms
  <t> runtime requirements.chunks: 0.044525 ms
  <t> runtime requirements.entries: 0.1857 ms
  <t> runtime requirements: 0.289158 ms
  <t> hashing: initialize hash: 0.00193 ms
  <t> hashing: sort chunks: 0.013601 ms
  <t> hashing: hash runtime modules: 0.14075 ms
  <t> hashing: hash chunks: 0.17726 ms
  <t> hashing: hash digest: 0.008896 ms
  <t> hashing: process full hash modules: 0.000958 ms
  <t> hashing: 0.371804 ms
      100% code generated (4 generated, 0 from cache)
  <t> record hash: 0.008792 ms
  <t> module assets: 0.009647 ms
  <t> create chunk assets: 0.330641 ms
  <t> process assets: 0.14458 ms

  LOG from webpack.FlagDependencyExportsPlugin
  <t> restore cached provided exports: 0.017806 ms
  <t> figure out provided exports: 0.063443 ms
      80% of exports of modules have been determined (1 no declared exports, 4 not cached, 0 flagged uncacheable, 0 from cache, 0 from mem cache, 0 additional calculations due to dependencies)
  <t> store provided exports into cache: 0.013762 ms

  LOG from webpack.InnerGraphPlugin
  <t> infer dependency usage: 0.019845 ms

  LOG from webpack.SideEffectsFlagPlugin
  <t> update dependencies: 0.018344 ms

  LOG from webpack.FlagDependencyUsagePlugin
  <t> initialize exports usage: 0.006606 ms
  <t> trace exports usage in graph: 0.173328 ms

  LOG from webpack.buildChunkGraph
  <t> visitModules: prepare: 0.028563 ms
  <t> visitModules: visiting: 0.049483 ms
      11 queue items processed (5 blocks)
      0 chunk groups connected
      0 chunk groups processed for merging (0 module sets, 0 forked, 0 + 0 modules forked, 0 + 0 modules merged into fork, 0 resulting modules)
      0 chunk group info updated (0 already connected chunk groups reconnected)
  <t> visitModules: 0.07173 ms
  <t> connectChunkGroups: 0.001781 ms
  <t> cleanup: 0.001231 ms

  LOG from webpack.SplitChunksPlugin
  <t> prepare: 0.012422 ms
  <t> modules: 0.063997 ms
  <t> queue: 0.001939 ms
  <t> maxSize: 0.005148 ms

  LOG from webpack.FileSystemInfo
      5 new snapshots created
      0% root snapshot uncached (0 / 0)
      0% children snapshot uncached (0 / 0)
      0 entries tested
      File info in cache: 3 timestamps 3 hashes 3 timestamp hash combinations
      File timestamp hash combination snapshot optimization: 0% (0/3) entries shared via 0 shared snapshots (0 times referenced)
      Directory info in cache: 0 timestamps 0 hashes 0 timestamp hash combinations
      Managed items info in cache: 0 items

  2021-12-05 17:44:40: fun1 without module concatenation (webpack 5.64.4) compiled successfully in 129 ms (290d7d9e5fbb55f38b60)

fun1 with module concatenation:
  PublicPath: (none)
  asset bundle3.js 5.87 KiB {179} [emitted] (name: main)
  Entrypoint main 5.87 KiB = bundle3.js
  chunk {179} (runtime: main) bundle3.js (main) 711 bytes (javascript) 937 bytes (runtime) [entry] [rendered]
    > ../_helpers/entryLoader.js?{"usedExports":["fun1"],"expect":{"./assert":["deepEqual","equal"]},"name":"fun1"}! main
    cacheable modules 711 bytes
      modules by path ../_helpers/*.js 132 bytes
        ../_helpers/inner-file.js?0 [326] 131 bytes {179} [depth 1] [dependent] [built] [code generated]
          [only some exports used: __usedExports, deepEqual, equal]
          Statement (ExportNamedDeclaration) with side effects in source code at 3:0-66
          ModuleConcatenation bailout: List of module exports is dynamic (deepEqual: maybe provided (runtime-defined) and used in main, equal: maybe provided (runtime-defined) and used in main)
          from origin ../_helpers/testModuleLoader.js?["fun1"]! + 1 modules
            harmony side effect evaluation ./assert [343] ../_helpers/testModuleLoader.js?["fun1"]! + 1 modules ./module.js 1:0-50
            harmony import specifier ./assert [343] ../_helpers/testModuleLoader.js?["fun1"]! + 1 modules ./module.js 5:2-4
            harmony import specifier ./assert [343] ../_helpers/testModuleLoader.js?["fun1"]! + 1 modules ./module.js 7:1-10
            [inactive] harmony import specifier ./assert [343] ../_helpers/testModuleLoader.js?["fun1"]! + 1 modules ./module.js 12:1-10
          from origin ./module.js
            harmony side effect evaluation ./assert ./module.js 1:0-50
            harmony import specifier ./assert ./module.js 5:2-4
            harmony import specifier ./assert ./module.js 7:1-10
            [inactive] harmony import specifier ./assert ./module.js 12:1-10
          from origin ../_helpers/entryLoader.js?{"usedExports":["fun1"],"expect":{"./assert":["deepEqual","equal"]},"name":"fun1"}!
            harmony side effect evaluation ./assert [729] ../_helpers/entryLoader.js?{"usedExports":["fun1"],"expect":{"./assert":["deepEqual","equal"]},"name":"fun1"}! 3:0-58
            harmony import specifier ./assert [729] ../_helpers/entryLoader.js?{"usedExports":["fun1"],"expect":{"./assert":["deepEqual","equal"]},"name":"fun1"}! 5:7-20
        ../_helpers/unknown.js [256] 1 bytes {179} [depth 2] [dependent] [built] [code generated]
          [used exports unknown]
          ModuleConcatenation bailout: Module is not an ECMAScript module
          [inactive] harmony side effect evaluation ./unknown [326] ../_helpers/inner-file.js?0 1:0-36
          [inactive] harmony export imported specifier ./unknown [326] ../_helpers/inner-file.js?0 1:0-36
          [inactive] harmony side effect evaluation ./unknown [326] ../_helpers/inner-file.js?0 2:0-26
          harmony export imported specifier ./unknown [326] ../_helpers/inner-file.js?0 2:0-26
      ../_helpers/entryLoader.js?{"usedExports":["fun1"],"expect":{"./assert":["deepEqual","equal"]},"name":"fun1"}! [729] 279 bytes {179} [depth 0] [built] [code generated]
        [no exports]
        [no exports used]
        Statement (IfStatement) with side effects in source code at 1:0-75
        ModuleConcatenation bailout: Cannot concat with ../_helpers/inner-file.js?0: Module ../_helpers/testModuleLoader.js?["fun1"]! is referenced from these modules with unsupported syntax: ../_helpers/entryLoader.js?{"usedExports":["fun1"],"expect":{"./assert":["deepEqual","equal"]},"name":"fun1"}! (referenced with cjs require)
        entry ../_helpers/entryLoader.js?{"usedExports":["fun1"],"expect":{"./assert":["deepEqual","equal"]},"name":"fun1"}! main
      ../_helpers/testModuleLoader.js?["fun1"]! + 1 modules [343] 300 bytes {179} [depth 1] [dependent] [built] [code generated]
        [exports: default]
        ModuleConcatenation bailout: Cannot concat with ../_helpers/inner-file.js?0 because of ../_helpers/entryLoader.js?{"usedExports":["fun1"],"expect":{"./assert":["deepEqual","equal"]},"name":"fun1"}!: List of module exports is dynamic (deepEqual: maybe provided (runtime-defined) and used in main, equal: maybe provided (runtime-defined) and used in main)
        cjs require ../_helpers/testModuleLoader?["fun1"]! [729] ../_helpers/entryLoader.js?{"usedExports":["fun1"],"expect":{"./assert":["deepEqual","equal"]},"name":"fun1"}! 1:23-74
    runtime modules 937 bytes
      webpack/runtime/compat get default export 267 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/define property getters 308 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/hasOwnProperty shorthand 88 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/make namespace object 274 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
    

  LOG from webpack.Compiler
  <t> make hook: 122.281941 ms
  <t> finish make hook: 0.006031 ms
  <t> finish compilation: 0.217446 ms
  <t> seal compilation: 3.885867 ms
  <t> afterCompile hook: 0.008773 ms
  <t> emitAssets: 1.537095 ms
  <t> emitRecords: 0.000931 ms
  <t> done hook: 0.016978 ms
  <t> beginIdle: 0.003456 ms

  LOG from webpack.Compilation
  <t> compute affected modules: 0.004526 ms
  <t> finish modules: 0.165439 ms
  <t> report dependency errors and warnings: 0.037662 ms
  <t> optimize dependencies: 0.215919 ms
  <t> create chunks: 0.160807 ms
  <t> compute affected modules with chunk graph: 0.001495 ms
  <t> optimize: 0.815232 ms
      4 modules hashed, 0 from cache (0.8 variants per module in average)
  <t> module hashing: 0.213991 ms
      100% code generated (4 generated, 0 from cache)
  <t> code generation: 1.172165 ms
  <t> runtime requirements.modules: 0.046898 ms
  <t> runtime requirements.chunks: 0.052946 ms
  <t> runtime requirements.entries: 0.166231 ms
  <t> runtime requirements: 0.284126 ms
  <t> hashing: initialize hash: 0.003603 ms
  <t> hashing: sort chunks: 0.014984 ms
  <t> hashing: hash runtime modules: 0.122897 ms
  <t> hashing: hash chunks: 0.181758 ms
  <t> hashing: hash digest: 0.00908 ms
  <t> hashing: process full hash modules: 0.001009 ms
  <t> hashing: 0.361484 ms
      100% code generated (4 generated, 0 from cache)
  <t> record hash: 0.005222 ms
  <t> module assets: 0.010146 ms
  <t> create chunk assets: 0.307616 ms
  <t> process assets: 0.150362 ms

  LOG from webpack.FlagDependencyExportsPlugin
  <t> restore cached provided exports: 0.021738 ms
  <t> figure out provided exports: 0.074162 ms
      80% of exports of modules have been determined (1 no declared exports, 4 not cached, 0 flagged uncacheable, 0 from cache, 0 from mem cache, 0 additional calculations due to dependencies)
  <t> store provided exports into cache: 0.014357 ms

  LOG from webpack.InnerGraphPlugin
  <t> infer dependency usage: 0.026304 ms

  LOG from webpack.SideEffectsFlagPlugin
  <t> update dependencies: 0.021147 ms

  LOG from webpack.FlagDependencyUsagePlugin
  <t> initialize exports usage: 0.00645 ms
  <t> trace exports usage in graph: 0.153439 ms

  LOG from webpack.buildChunkGraph
  <t> visitModules: prepare: 0.029247 ms
  <t> visitModules: visiting: 0.054774 ms
      11 queue items processed (5 blocks)
      0 chunk groups connected
      0 chunk groups processed for merging (0 module sets, 0 forked, 0 + 0 modules forked, 0 + 0 modules merged into fork, 0 resulting modules)
      0 chunk group info updated (0 already connected chunk groups reconnected)
  <t> visitModules: 0.076127 ms
  <t> connectChunkGroups: 0.001987 ms
  <t> cleanup: 0.001762 ms

  LOG from webpack.SplitChunksPlugin
  <t> prepare: 0.015604 ms
  <t> modules: 0.065146 ms
  <t> queue: 0.002109 ms
  <t> maxSize: 0.004673 ms

  LOG from webpack.ModuleConcatenationPlugin
  <t> select relevant modules: 0.049468 ms
  <t> sort relevant modules: 0.002892 ms
  <t> find modules to concatenate: 0.084969 ms
  <t> sort concat configurations: 0.000646 ms
  <t> create concatenated modules: 0.116174 ms
  + 3 hidden lines

  LOG from webpack.FileSystemInfo
      5 new snapshots created
      0% root snapshot uncached (0 / 0)
      0% children snapshot uncached (0 / 0)
      0 entries tested
      File info in cache: 3 timestamps 3 hashes 3 timestamp hash combinations
      File timestamp hash combination snapshot optimization: 0% (0/3) entries shared via 0 shared snapshots (0 times referenced)
      Directory info in cache: 0 timestamps 0 hashes 0 timestamp hash combinations
      Managed items info in cache: 0 items

  2021-12-05 17:44:40: fun1 with module concatenation (webpack 5.64.4) compiled successfully in 130 ms (db7d02a188f124b0ee7f)

fun2 without module concatenation:
  PublicPath: (none)
  asset bundle4.js 6.01 KiB {179} [emitted] (name: main)
  Entrypoint main 6.01 KiB = bundle4.js
  chunk {179} (runtime: main) bundle4.js (main) 703 bytes (javascript) 937 bytes (runtime) [entry] [rendered]
    > ../_helpers/entryLoader.js?{"usedExports":["fun2"],"expect":{"./assert":["deepEqual"]},"name":"fun2"}! main
    cacheable modules 703 bytes
      modules by path ../_helpers/*.js 132 bytes
        ../_helpers/inner-file.js?0 [326] 131 bytes {179} [depth 1] [dependent] [built] [code generated]
          [only some exports used: __usedExports, deepEqual]
          Statement (ExportNamedDeclaration) with side effects in source code at 3:0-66
          from origin ./module.js
            harmony side effect evaluation ./assert [662] ./module.js 1:0-50
            [inactive] harmony import specifier ./assert [662] ./module.js 5:2-4
            [inactive] harmony import specifier ./assert [662] ./module.js 7:1-10
            harmony import specifier ./assert [662] ./module.js 12:1-10
          from origin ../_helpers/entryLoader.js?{"usedExports":["fun2"],"expect":{"./assert":["deepEqual"]},"name":"fun2"}!
            harmony side effect evaluation ./assert [296] ../_helpers/entryLoader.js?{"usedExports":["fun2"],"expect":{"./assert":["deepEqual"]},"name":"fun2"}! 3:0-58
            harmony import specifier ./assert [296] ../_helpers/entryLoader.js?{"usedExports":["fun2"],"expect":{"./assert":["deepEqual"]},"name":"fun2"}! 5:7-20
        ../_helpers/unknown.js [256] 1 bytes {179} [depth 2] [dependent] [built] [code generated]
          [used exports unknown]
          [inactive] harmony side effect evaluation ./unknown [326] ../_helpers/inner-file.js?0 1:0-36
          [inactive] harmony export imported specifier ./unknown [326] ../_helpers/inner-file.js?0 1:0-36
          [inactive] harmony side effect evaluation ./unknown [326] ../_helpers/inner-file.js?0 2:0-26
          harmony export imported specifier ./unknown [326] ../_helpers/inner-file.js?0 2:0-26
      ../_helpers/entryLoader.js?{"usedExports":["fun2"],"expect":{"./assert":["deepEqual"]},"name":"fun2"}! [296] 271 bytes {179} [depth 0] [built] [code generated]
        [no exports]
        [no exports used]
        Statement (IfStatement) with side effects in source code at 1:0-75
        entry ../_helpers/entryLoader.js?{"usedExports":["fun2"],"expect":{"./assert":["deepEqual"]},"name":"fun2"}! main
      ../_helpers/testModuleLoader.js?["fun2"]! [820] 77 bytes {179} [depth 1] [dependent] [built] [code generated]
        [exports: default]
        Statement (ExportDefaultDeclaration) with side effects in source code at 2:0-29
        cjs require ../_helpers/testModuleLoader?["fun2"]! [296] ../_helpers/entryLoader.js?{"usedExports":["fun2"],"expect":{"./assert":["deepEqual"]},"name":"fun2"}! 1:23-74
      ./module.js [662] 223 bytes {179} [depth 2] [dependent] [built] [code generated]
        [exports: fun1, fun2]
        [only some exports used: fun2]
        Dependency (harmony side effect evaluation) with side effects at 1:0-50
        harmony side effect evaluation ./module [820] ../_helpers/testModuleLoader.js?["fun2"]! 1:0-47
        harmony import specifier ./module [820] ../_helpers/testModuleLoader.js?["fun2"]! 2:16-27
    runtime modules 937 bytes
      webpack/runtime/compat get default export 267 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/define property getters 308 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/hasOwnProperty shorthand 88 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/make namespace object 274 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
    

  LOG from webpack.Compiler
  <t> make hook: 117.232531 ms
  <t> finish make hook: 0.009722 ms
  <t> finish compilation: 0.222945 ms
  <t> seal compilation: 3.081447 ms
  <t> afterCompile hook: 0.008424 ms
  <t> emitAssets: 5.644183 ms
  <t> emitRecords: 0.001758 ms
  <t> done hook: 0.019979 ms
  <t> beginIdle: 0.007109 ms

  LOG from webpack.Compilation
  <t> compute affected modules: 0.005002 ms
  <t> finish modules: 0.174598 ms
  <t> report dependency errors and warnings: 0.032142 ms
  <t> optimize dependencies: 0.217573 ms
  <t> create chunks: 0.148639 ms
  <t> compute affected modules with chunk graph: 0.00145 ms
  <t> optimize: 0.550386 ms
      5 modules hashed, 0 from cache (1 variants per module in average)
  <t> module hashing: 0.15096 ms
      100% code generated (5 generated, 0 from cache)
  <t> code generation: 0.355972 ms
  <t> runtime requirements.modules: 0.042279 ms
  <t> runtime requirements.chunks: 0.048192 ms
  <t> runtime requirements.entries: 0.263429 ms
  <t> runtime requirements: 0.380499 ms
  <t> hashing: initialize hash: 0.002828 ms
  <t> hashing: sort chunks: 0.016379 ms
  <t> hashing: hash runtime modules: 0.162514 ms
  <t> hashing: hash chunks: 0.185609 ms
  <t> hashing: hash digest: 0.012783 ms
  <t> hashing: process full hash modules: 0.001177 ms
  <t> hashing: 0.41239 ms
      100% code generated (4 generated, 0 from cache)
  <t> record hash: 0.041425 ms
  <t> module assets: 0.014904 ms
  <t> create chunk assets: 0.392904 ms
  <t> process assets: 0.165721 ms

  LOG from webpack.FlagDependencyExportsPlugin
  <t> restore cached provided exports: 0.02245 ms
  <t> figure out provided exports: 0.077145 ms
      80% of exports of modules have been determined (1 no declared exports, 4 not cached, 0 flagged uncacheable, 0 from cache, 0 from mem cache, 0 additional calculations due to dependencies)
  <t> store provided exports into cache: 0.014979 ms

  LOG from webpack.InnerGraphPlugin
  <t> infer dependency usage: 0.029355 ms

  LOG from webpack.SideEffectsFlagPlugin
  <t> update dependencies: 0.021811 ms

  LOG from webpack.FlagDependencyUsagePlugin
  <t> initialize exports usage: 0.006386 ms
  <t> trace exports usage in graph: 0.150932 ms

  LOG from webpack.buildChunkGraph
  <t> visitModules: prepare: 0.028546 ms
  <t> visitModules: visiting: 0.050194 ms
      11 queue items processed (5 blocks)
      0 chunk groups connected
      0 chunk groups processed for merging (0 module sets, 0 forked, 0 + 0 modules forked, 0 + 0 modules merged into fork, 0 resulting modules)
      0 chunk group info updated (0 already connected chunk groups reconnected)
  <t> visitModules: 0.072969 ms
  <t> connectChunkGroups: 0.002121 ms
  <t> cleanup: 0.001528 ms

  LOG from webpack.SplitChunksPlugin
  <t> prepare: 0.014923 ms
  <t> modules: 0.069782 ms
  <t> queue: 0.001994 ms
  <t> maxSize: 0.00499 ms

  LOG from webpack.FileSystemInfo
      5 new snapshots created
      0% root snapshot uncached (0 / 0)
      0% children snapshot uncached (0 / 0)
      0 entries tested
      File info in cache: 3 timestamps 3 hashes 3 timestamp hash combinations
      File timestamp hash combination snapshot optimization: 0% (0/3) entries shared via 0 shared snapshots (0 times referenced)
      Directory info in cache: 0 timestamps 0 hashes 0 timestamp hash combinations
      Managed items info in cache: 0 items

  2021-12-05 17:44:40: fun2 without module concatenation (webpack 5.64.4) compiled successfully in 128 ms (5dad18c26d82ab848926)

fun2 with module concatenation:
  PublicPath: (none)
  asset bundle5.js 5.58 KiB {179} [emitted] (name: main)
  Entrypoint main 5.58 KiB = bundle5.js
  chunk {179} (runtime: main) bundle5.js (main) 703 bytes (javascript) 937 bytes (runtime) [entry] [rendered]
    > ../_helpers/entryLoader.js?{"usedExports":["fun2"],"expect":{"./assert":["deepEqual"]},"name":"fun2"}! main
    cacheable modules 703 bytes
      modules by path ../_helpers/*.js 132 bytes
        ../_helpers/inner-file.js?0 [326] 131 bytes {179} [depth 1] [dependent] [built] [code generated]
          [only some exports used: __usedExports, deepEqual]
          Statement (ExportNamedDeclaration) with side effects in source code at 3:0-66
          ModuleConcatenation bailout: List of module exports is dynamic (deepEqual: maybe provided (runtime-defined) and used in main)
          from origin ../_helpers/testModuleLoader.js?["fun2"]! + 1 modules
            harmony side effect evaluation ./assert [562] ../_helpers/testModuleLoader.js?["fun2"]! + 1 modules ./module.js 1:0-50
            [inactive] harmony import specifier ./assert [562] ../_helpers/testModuleLoader.js?["fun2"]! + 1 modules ./module.js 5:2-4
            [inactive] harmony import specifier ./assert [562] ../_helpers/testModuleLoader.js?["fun2"]! + 1 modules ./module.js 7:1-10
            harmony import specifier ./assert [562] ../_helpers/testModuleLoader.js?["fun2"]! + 1 modules ./module.js 12:1-10
          from origin ./module.js
            harmony side effect evaluation ./assert ./module.js 1:0-50
            [inactive] harmony import specifier ./assert ./module.js 5:2-4
            [inactive] harmony import specifier ./assert ./module.js 7:1-10
            harmony import specifier ./assert ./module.js 12:1-10
          from origin ../_helpers/entryLoader.js?{"usedExports":["fun2"],"expect":{"./assert":["deepEqual"]},"name":"fun2"}!
            harmony side effect evaluation ./assert [296] ../_helpers/entryLoader.js?{"usedExports":["fun2"],"expect":{"./assert":["deepEqual"]},"name":"fun2"}! 3:0-58
            harmony import specifier ./assert [296] ../_helpers/entryLoader.js?{"usedExports":["fun2"],"expect":{"./assert":["deepEqual"]},"name":"fun2"}! 5:7-20
        ../_helpers/unknown.js [256] 1 bytes {179} [depth 2] [dependent] [built] [code generated]
          [used exports unknown]
          ModuleConcatenation bailout: Module is not an ECMAScript module
          [inactive] harmony side effect evaluation ./unknown [326] ../_helpers/inner-file.js?0 1:0-36
          [inactive] harmony export imported specifier ./unknown [326] ../_helpers/inner-file.js?0 1:0-36
          [inactive] harmony side effect evaluation ./unknown [326] ../_helpers/inner-file.js?0 2:0-26
          harmony export imported specifier ./unknown [326] ../_helpers/inner-file.js?0 2:0-26
      ../_helpers/entryLoader.js?{"usedExports":["fun2"],"expect":{"./assert":["deepEqual"]},"name":"fun2"}! [296] 271 bytes {179} [depth 0] [built] [code generated]
        [no exports]
        [no exports used]
        Statement (IfStatement) with side effects in source code at 1:0-75
        ModuleConcatenation bailout: Cannot concat with ../_helpers/inner-file.js?0: Module ../_helpers/testModuleLoader.js?["fun2"]! is referenced from these modules with unsupported syntax: ../_helpers/entryLoader.js?{"usedExports":["fun2"],"expect":{"./assert":["deepEqual"]},"name":"fun2"}! (referenced with cjs require)
        entry ../_helpers/entryLoader.js?{"usedExports":["fun2"],"expect":{"./assert":["deepEqual"]},"name":"fun2"}! main
      ../_helpers/testModuleLoader.js?["fun2"]! + 1 modules [562] 300 bytes {179} [depth 1] [dependent] [built] [code generated]
        [exports: default]
        ModuleConcatenation bailout: Cannot concat with ../_helpers/inner-file.js?0 because of ../_helpers/entryLoader.js?{"usedExports":["fun2"],"expect":{"./assert":["deepEqual"]},"name":"fun2"}!: List of module exports is dynamic (deepEqual: maybe provided (runtime-defined) and used in main)
        cjs require ../_helpers/testModuleLoader?["fun2"]! [296] ../_helpers/entryLoader.js?{"usedExports":["fun2"],"expect":{"./assert":["deepEqual"]},"name":"fun2"}! 1:23-74
    runtime modules 937 bytes
      webpack/runtime/compat get default export 267 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/define property getters 308 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/hasOwnProperty shorthand 88 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/make namespace object 274 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
    

  LOG from webpack.Compiler
  <t> make hook: 96.539098 ms
  <t> finish make hook: 0.013172 ms
  <t> finish compilation: 0.345888 ms
  <t> seal compilation: 8.183041 ms
  <t> afterCompile hook: 0.015086 ms
  <t> emitAssets: 18.853459 ms
  <t> emitRecords: 0.00077 ms
  <t> done hook: 0.010515 ms
  <t> beginIdle: 0.003491 ms

  LOG from webpack.Compilation
  <t> compute affected modules: 0.005936 ms
  <t> finish modules: 0.240186 ms
  <t> report dependency errors and warnings: 0.073268 ms
  <t> optimize dependencies: 0.307469 ms
  <t> create chunks: 0.207613 ms
  <t> compute affected modules with chunk graph: 0.002273 ms
  <t> optimize: 1.297144 ms
      4 modules hashed, 0 from cache (0.8 variants per module in average)
  <t> module hashing: 0.306383 ms
      100% code generated (4 generated, 0 from cache)
  <t> code generation: 1.465586 ms
  <t> runtime requirements.modules: 0.062712 ms
  <t> runtime requirements.chunks: 0.067722 ms
  <t> runtime requirements.entries: 0.22329 ms
  <t> runtime requirements: 0.379162 ms
  <t> hashing: initialize hash: 0.003661 ms
  <t> hashing: sort chunks: 0.02021 ms
  <t> hashing: hash runtime modules: 0.164408 ms
  <t> hashing: hash chunks: 0.2565 ms
  <t> hashing: hash digest: 0.015508 ms
  <t> hashing: process full hash modules: 0.00152 ms
  <t> hashing: 0.501315 ms
      100% code generated (4 generated, 0 from cache)
  <t> record hash: 0.009304 ms
  <t> module assets: 0.013917 ms
  <t> create chunk assets: 3.091419 ms
  <t> process assets: 0.309712 ms

  LOG from webpack.FlagDependencyExportsPlugin
  <t> restore cached provided exports: 0.026835 ms
  <t> figure out provided exports: 0.105651 ms
      80% of exports of modules have been determined (1 no declared exports, 4 not cached, 0 flagged uncacheable, 0 from cache, 0 from mem cache, 0 additional calculations due to dependencies)
  <t> store provided exports into cache: 0.023172 ms

  LOG from webpack.InnerGraphPlugin
  <t> infer dependency usage: 0.028489 ms

  LOG from webpack.SideEffectsFlagPlugin
  <t> update dependencies: 0.029592 ms

  LOG from webpack.FlagDependencyUsagePlugin
  <t> initialize exports usage: 0.010102 ms
  <t> trace exports usage in graph: 0.214273 ms

  LOG from webpack.buildChunkGraph
  <t> visitModules: prepare: 0.042231 ms
  <t> visitModules: visiting: 0.074089 ms
      11 queue items processed (5 blocks)
      0 chunk groups connected
      0 chunk groups processed for merging (0 module sets, 0 forked, 0 + 0 modules forked, 0 + 0 modules merged into fork, 0 resulting modules)
      0 chunk group info updated (0 already connected chunk groups reconnected)
  <t> visitModules: 0.113432 ms
  <t> connectChunkGroups: 0.002734 ms
  <t> cleanup: 0.002308 ms

  LOG from webpack.SplitChunksPlugin
  <t> prepare: 0.021472 ms
  <t> modules: 0.099686 ms
  <t> queue: 0.003029 ms
  <t> maxSize: 0.008447 ms

  LOG from webpack.ModuleConcatenationPlugin
  <t> select relevant modules: 0.068128 ms
  <t> sort relevant modules: 0.003478 ms
  <t> find modules to concatenate: 0.156771 ms
  <t> sort concat configurations: 0.001024 ms
  <t> create concatenated modules: 0.16822 ms
  + 3 hidden lines

  LOG from webpack.FileSystemInfo
      5 new snapshots created
      0% root snapshot uncached (0 / 0)
      0% children snapshot uncached (0 / 0)
      0 entries tested
      File info in cache: 3 timestamps 3 hashes 3 timestamp hash combinations
      File timestamp hash combination snapshot optimization: 0% (0/3) entries shared via 0 shared snapshots (0 times referenced)
      Directory info in cache: 0 timestamps 0 hashes 0 timestamp hash combinations
      Managed items info in cache: 0 items

  2021-12-05 17:44:40: fun2 with module concatenation (webpack 5.64.4) compiled successfully in 125 ms (f1f3fae276ec6e49939f)

all without module concatenation:
  PublicPath: (none)
  asset bundle6.js 6.48 KiB {179} [emitted] (name: main)
  Entrypoint main 6.48 KiB = bundle6.js
  chunk {179} (runtime: main) bundle6.js (main) 753 bytes (javascript) 937 bytes (runtime) [entry] [rendered]
    > ../_helpers/entryLoader.js?{"usedExports":["fun1","fun2"],"expect":{"./assert":["deepEqual","equal"]},"name":"all"}! main
    cacheable modules 753 bytes
      modules by path ../_helpers/*.js 132 bytes
        ../_helpers/inner-file.js?0 [326] 131 bytes {179} [depth 1] [dependent] [built] [code generated]
          [only some exports used: __usedExports, deepEqual, equal]
          Statement (ExportNamedDeclaration) with side effects in source code at 3:0-66
          from origin ./module.js
            harmony side effect evaluation ./assert [662] ./module.js 1:0-50
            harmony import specifier ./assert [662] ./module.js 5:2-4
            harmony import specifier ./assert [662] ./module.js 7:1-10
            harmony import specifier ./assert [662] ./module.js 12:1-10
          from origin ../_helpers/entryLoader.js?{"usedExports":["fun1","fun2"],"expect":{"./assert":["deepEqual","equal"]},"name":"all"}!
            harmony side effect evaluation ./assert [980] ../_helpers/entryLoader.js?{"usedExports":["fun1","fun2"],"expect":{"./assert":["deepEqual","equal"]},"name":"all"}! 3:0-58
            harmony import specifier ./assert [980] ../_helpers/entryLoader.js?{"usedExports":["fun1","fun2"],"expect":{"./assert":["deepEqual","equal"]},"name":"all"}! 5:7-20
        ../_helpers/unknown.js [256] 1 bytes {179} [depth 2] [dependent] [built] [code generated]
          [used exports unknown]
          [inactive] harmony side effect evaluation ./unknown [326] ../_helpers/inner-file.js?0 1:0-36
          [inactive] harmony export imported specifier ./unknown [326] ../_helpers/inner-file.js?0 1:0-36
          [inactive] harmony side effect evaluation ./unknown [326] ../_helpers/inner-file.js?0 2:0-26
          harmony export imported specifier ./unknown [326] ../_helpers/inner-file.js?0 2:0-26
      ../_helpers/entryLoader.js?{"usedExports":["fun1","fun2"],"expect":{"./assert":["deepEqual","equal"]},"name":"all"}! [980] 287 bytes {179} [depth 0] [built] [code generated]
        [no exports]
        [no exports used]
        Statement (IfStatement) with side effects in source code at 1:0-84
        entry ../_helpers/entryLoader.js?{"usedExports":["fun1","fun2"],"expect":{"./assert":["deepEqual","equal"]},"name":"all"}! main
      ../_helpers/testModuleLoader.js?["fun1","fun2"]! [882] 111 bytes {179} [depth 1] [dependent] [built] [code generated]
        [exports: default]
        Statement (ExportDefaultDeclaration) with side effects in source code at 2:0-42
        cjs require ../_helpers/testModuleLoader?["fun1","fun2"]! [980] ../_helpers/entryLoader.js?{"usedExports":["fun1","fun2"],"expect":{"./assert":["deepEqual","equal"]},"name":"all"}! 1:23-83
      ./module.js [662] 223 bytes {179} [depth 2] [dependent] [built] [code generated]
        [exports: fun1, fun2]
        [all exports used]
        Dependency (harmony side effect evaluation) with side effects at 1:0-50
        harmony side effect evaluation ./module [882] ../_helpers/testModuleLoader.js?["fun1","fun2"]! 1:0-68
        harmony import specifier ./module [882] ../_helpers/testModuleLoader.js?["fun1","fun2"]! 2:16-27
        harmony import specifier ./module [882] ../_helpers/testModuleLoader.js?["fun1","fun2"]! 2:29-40
    runtime modules 937 bytes
      webpack/runtime/compat get default export 267 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/define property getters 308 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/hasOwnProperty shorthand 88 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/make namespace object 274 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
    

  LOG from webpack.Compiler
  <t> make hook: 105.35765 ms
  <t> finish make hook: 0.008954 ms
  <t> finish compilation: 0.220101 ms
  <t> seal compilation: 3.684865 ms
  <t> afterCompile hook: 0.009143 ms
  <t> emitAssets: 9.331155 ms
  <t> emitRecords: 0.001522 ms
  <t> done hook: 0.016209 ms
  <t> beginIdle: 0.005583 ms

  LOG from webpack.Compilation
  <t> compute affected modules: 0.005853 ms
  <t> finish modules: 0.168801 ms
  <t> report dependency errors and warnings: 0.033413 ms
  <t> optimize dependencies: 0.225836 ms
  <t> create chunks: 0.137891 ms
  <t> compute affected modules with chunk graph: 0.001343 ms
  <t> optimize: 0.54466 ms
      5 modules hashed, 0 from cache (1 variants per module in average)
  <t> module hashing: 0.148748 ms
      100% code generated (5 generated, 0 from cache)
  <t> code generation: 1.262593 ms
  <t> runtime requirements.modules: 0.040687 ms
  <t> runtime requirements.chunks: 0.044961 ms
  <t> runtime requirements.entries: 0.148247 ms
  <t> runtime requirements: 0.250755 ms
  <t> hashing: initialize hash: 0.003201 ms
  <t> hashing: sort chunks: 0.01394 ms
  <t> hashing: hash runtime modules: 0.113429 ms
  <t> hashing: hash chunks: 0.167949 ms
  <t> hashing: hash digest: 0.008956 ms
  <t> hashing: process full hash modules: 0.001152 ms
  <t> hashing: 0.333805 ms
      100% code generated (4 generated, 0 from cache)
  <t> record hash: 0.004412 ms
  <t> module assets: 0.008557 ms
  <t> create chunk assets: 0.320174 ms
  <t> process assets: 0.264628 ms

  LOG from webpack.FlagDependencyExportsPlugin
  <t> restore cached provided exports: 0.022878 ms
  <t> figure out provided exports: 0.067806 ms
      80% of exports of modules have been determined (1 no declared exports, 4 not cached, 0 flagged uncacheable, 0 from cache, 0 from mem cache, 0 additional calculations due to dependencies)
  <t> store provided exports into cache: 0.015101 ms

  LOG from webpack.InnerGraphPlugin
  <t> infer dependency usage: 0.024687 ms

  LOG from webpack.SideEffectsFlagPlugin
  <t> update dependencies: 0.021341 ms

  LOG from webpack.FlagDependencyUsagePlugin
  <t> initialize exports usage: 0.006692 ms
  <t> trace exports usage in graph: 0.158714 ms

  LOG from webpack.buildChunkGraph
  <t> visitModules: prepare: 0.027339 ms
  <t> visitModules: visiting: 0.048117 ms
      11 queue items processed (5 blocks)
      0 chunk groups connected
      0 chunk groups processed for merging (0 module sets, 0 forked, 0 + 0 modules forked, 0 + 0 modules merged into fork, 0 resulting modules)
      0 chunk group info updated (0 already connected chunk groups reconnected)
  <t> visitModules: 0.069831 ms
  <t> connectChunkGroups: 0.001888 ms
  <t> cleanup: 0.001476 ms

  LOG from webpack.SplitChunksPlugin
  <t> prepare: 0.014852 ms
  <t> modules: 0.063229 ms
  <t> queue: 0.001895 ms
  <t> maxSize: 0.005628 ms

  LOG from webpack.FileSystemInfo
      5 new snapshots created
      0% root snapshot uncached (0 / 0)
      0% children snapshot uncached (0 / 0)
      0 entries tested
      File info in cache: 3 timestamps 3 hashes 3 timestamp hash combinations
      File timestamp hash combination snapshot optimization: 0% (0/3) entries shared via 0 shared snapshots (0 times referenced)
      Directory info in cache: 0 timestamps 0 hashes 0 timestamp hash combinations
      Managed items info in cache: 0 items

  2021-12-05 17:44:40: all without module concatenation (webpack 5.64.4) compiled successfully in 124 ms (2d7e35f8b8e1a7f3c148)

all with module concatenation:
  PublicPath: (none)
  asset bundle7.js 5.95 KiB {179} [emitted] (name: main)
  Entrypoint main 5.95 KiB = bundle7.js
  chunk {179} (runtime: main) bundle7.js (main) 753 bytes (javascript) 937 bytes (runtime) [entry] [rendered]
    > ../_helpers/entryLoader.js?{"usedExports":["fun1","fun2"],"expect":{"./assert":["deepEqual","equal"]},"name":"all"}! main
    cacheable modules 753 bytes
      modules by path ../_helpers/*.js 132 bytes
        ../_helpers/inner-file.js?0 [326] 131 bytes {179} [depth 1] [dependent] [built] [code generated]
          [only some exports used: __usedExports, deepEqual, equal]
          Statement (ExportNamedDeclaration) with side effects in source code at 3:0-66
          ModuleConcatenation bailout: List of module exports is dynamic (deepEqual: maybe provided (runtime-defined) and used in main, equal: maybe provided (runtime-defined) and used in main)
          from origin ../_helpers/testModuleLoader.js?["fun1","fun2"]! + 1 modules
            harmony side effect evaluation ./assert [306] ../_helpers/testModuleLoader.js?["fun1","fun2"]! + 1 modules ./module.js 1:0-50
            harmony import specifier ./assert [306] ../_helpers/testModuleLoader.js?["fun1","fun2"]! + 1 modules ./module.js 5:2-4
            harmony import specifier ./assert [306] ../_helpers/testModuleLoader.js?["fun1","fun2"]! + 1 modules ./module.js 7:1-10
            harmony import specifier ./assert [306] ../_helpers/testModuleLoader.js?["fun1","fun2"]! + 1 modules ./module.js 12:1-10
          from origin ./module.js
            harmony side effect evaluation ./assert ./module.js 1:0-50
            harmony import specifier ./assert ./module.js 5:2-4
            harmony import specifier ./assert ./module.js 7:1-10
            harmony import specifier ./assert ./module.js 12:1-10
          from origin ../_helpers/entryLoader.js?{"usedExports":["fun1","fun2"],"expect":{"./assert":["deepEqual","equal"]},"name":"all"}!
            harmony side effect evaluation ./assert [980] ../_helpers/entryLoader.js?{"usedExports":["fun1","fun2"],"expect":{"./assert":["deepEqual","equal"]},"name":"all"}! 3:0-58
            harmony import specifier ./assert [980] ../_helpers/entryLoader.js?{"usedExports":["fun1","fun2"],"expect":{"./assert":["deepEqual","equal"]},"name":"all"}! 5:7-20
        ../_helpers/unknown.js [256] 1 bytes {179} [depth 2] [dependent] [built] [code generated]
          [used exports unknown]
          ModuleConcatenation bailout: Module is not an ECMAScript module
          [inactive] harmony side effect evaluation ./unknown [326] ../_helpers/inner-file.js?0 1:0-36
          [inactive] harmony export imported specifier ./unknown [326] ../_helpers/inner-file.js?0 1:0-36
          [inactive] harmony side effect evaluation ./unknown [326] ../_helpers/inner-file.js?0 2:0-26
          harmony export imported specifier ./unknown [326] ../_helpers/inner-file.js?0 2:0-26
      ../_helpers/entryLoader.js?{"usedExports":["fun1","fun2"],"expect":{"./assert":["deepEqual","equal"]},"name":"all"}! [980] 287 bytes {179} [depth 0] [built] [code generated]
        [no exports]
        [no exports used]
        Statement (IfStatement) with side effects in source code at 1:0-84
        ModuleConcatenation bailout: Cannot concat with ../_helpers/inner-file.js?0: Module ../_helpers/testModuleLoader.js?["fun1","fun2"]! is referenced from these modules with unsupported syntax: ../_helpers/entryLoader.js?{"usedExports":["fun1","fun2"],"expect":{"./assert":["deepEqual","equal"]},"name":"all"}! (referenced with cjs require)
        entry ../_helpers/entryLoader.js?{"usedExports":["fun1","fun2"],"expect":{"./assert":["deepEqual","equal"]},"name":"all"}! main
      ../_helpers/testModuleLoader.js?["fun1","fun2"]! + 1 modules [306] 334 bytes {179} [depth 1] [dependent] [built] [code generated]
        [exports: default]
        ModuleConcatenation bailout: Cannot concat with ../_helpers/inner-file.js?0 because of ../_helpers/entryLoader.js?{"usedExports":["fun1","fun2"],"expect":{"./assert":["deepEqual","equal"]},"name":"all"}!: List of module exports is dynamic (deepEqual: maybe provided (runtime-defined) and used in main, equal: maybe provided (runtime-defined) and used in main)
        cjs require ../_helpers/testModuleLoader?["fun1","fun2"]! [980] ../_helpers/entryLoader.js?{"usedExports":["fun1","fun2"],"expect":{"./assert":["deepEqual","equal"]},"name":"all"}! 1:23-83
    runtime modules 937 bytes
      webpack/runtime/compat get default export 267 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/define property getters 308 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/hasOwnProperty shorthand 88 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
      webpack/runtime/make namespace object 274 bytes {179} [code generated]
        [no exports]
        [used exports unknown]
    

  LOG from webpack.Compiler
  <t> make hook: 98.043046 ms
  <t> finish make hook: 0.009873 ms
  <t> finish compilation: 0.311457 ms
  <t> seal compilation: 5.004001 ms
  <t> afterCompile hook: 0.008957 ms
  <t> emitAssets: 13.486198 ms
  <t> emitRecords: 0.000864 ms
  <t> done hook: 0.010095 ms
  <t> beginIdle: 0.00366 ms

  LOG from webpack.Compilation
  <t> compute affected modules: 0.005277 ms
  <t> finish modules: 0.241606 ms
  <t> report dependency errors and warnings: 0.044546 ms
  <t> optimize dependencies: 0.331964 ms
  <t> create chunks: 0.195734 ms
  <t> compute affected modules with chunk graph: 0.001585 ms
  <t> optimize: 1.141246 ms
      4 modules hashed, 0 from cache (0.8 variants per module in average)
  <t> module hashing: 0.226162 ms
      100% code generated (4 generated, 0 from cache)
  <t> code generation: 1.333957 ms
  <t> runtime requirements.modules: 0.061794 ms
  <t> runtime requirements.chunks: 0.064322 ms
  <t> runtime requirements.entries: 0.214541 ms
  <t> runtime requirements: 0.366984 ms
  <t> hashing: initialize hash: 0.005121 ms
  <t> hashing: sort chunks: 0.01973 ms
  <t> hashing: hash runtime modules: 0.170825 ms
  <t> hashing: hash chunks: 0.248997 ms
  <t> hashing: hash digest: 0.01251 ms
  <t> hashing: process full hash modules: 0.001384 ms
  <t> hashing: 0.507362 ms
      100% code generated (4 generated, 0 from cache)
  <t> record hash: 0.007189 ms
  <t> module assets: 0.011132 ms
  <t> create chunk assets: 0.466852 ms
  <t> process assets: 0.180599 ms

  LOG from webpack.FlagDependencyExportsPlugin
  <t> restore cached provided exports: 0.027828 ms
  <t> figure out provided exports: 0.107593 ms
      80% of exports of modules have been determined (1 no declared exports, 4 not cached, 0 flagged uncacheable, 0 from cache, 0 from mem cache, 0 additional calculations due to dependencies)
  <t> store provided exports into cache: 0.022219 ms

  LOG from webpack.InnerGraphPlugin
  <t> infer dependency usage: 0.023008 ms

  LOG from webpack.SideEffectsFlagPlugin
  <t> update dependencies: 0.032167 ms

  LOG from webpack.FlagDependencyUsagePlugin
  <t> initialize exports usage: 0.010449 ms
  <t> trace exports usage in graph: 0.236769 ms

  LOG from webpack.buildChunkGraph
  <t> visitModules: prepare: 0.039745 ms
  <t> visitModules: visiting: 0.068738 ms
      11 queue items processed (5 blocks)
      0 chunk groups connected
      0 chunk groups processed for merging (0 module sets, 0 forked, 0 + 0 modules forked, 0 + 0 modules merged into fork, 0 resulting modules)
      0 chunk group info updated (0 already connected chunk groups reconnected)
  <t> visitModules: 0.101232 ms
  <t> connectChunkGroups: 0.002656 ms
  <t> cleanup: 0.001924 ms

  LOG from webpack.SplitChunksPlugin
  <t> prepare: 0.020674 ms
  <t> modules: 0.097676 ms
  <t> queue: 0.002978 ms
  <t> maxSize: 0.007079 ms

  LOG from webpack.ModuleConcatenationPlugin
  <t> select relevant modules: 0.068415 ms
  <t> sort relevant modules: 0.003608 ms
  <t> find modules to concatenate: 0.217029 ms
  <t> sort concat configurations: 0.001057 ms
  <t> create concatenated modules: 0.145297 ms
  + 3 hidden lines

  LOG from webpack.FileSystemInfo
      5 new snapshots created
      0% root snapshot uncached (0 / 0)
      0% children snapshot uncached (0 / 0)
      0 entries tested
      File info in cache: 3 timestamps 3 hashes 3 timestamp hash combinations
      File timestamp hash combination snapshot optimization: 0% (0/3) entries shared via 0 shared snapshots (0 times referenced)
      Directory info in cache: 0 timestamps 0 hashes 0 timestamp hash combinations
      Managed items info in cache: 0 items

  2021-12-05 17:44:40: all with module concatenation (webpack 5.64.4) compiled successfully in 118 ms (44b380989c3504001812)