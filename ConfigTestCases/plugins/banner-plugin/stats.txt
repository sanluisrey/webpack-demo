PublicPath: (none)
asset bundle0.js 2.9 KiB {142} [emitted] (name: bundle0)
asset vendors.js 1.71 KiB {216} [emitted] (name: vendors)
Entrypoint bundle0 2.9 KiB = bundle0.js
Entrypoint vendors 1.71 KiB = vendors.js
chunk {142} (runtime: bundle0) bundle0.js (bundle0) 932 bytes [entry] [rendered]
  > ./index.js bundle0
  cacheable modules 848 bytes
    ./index.js [10] 811 bytes {142} [depth 0] [built] [code generated]
      [no exports used]
      Statement (VariableDeclaration) with side effects in source code at 1:0-25
      ModuleConcatenation bailout: Module is not an ECMAScript module
      entry ./index.js bundle0
    ./test.js [393] 37 bytes {142} [depth 1] [dependent] [built] [code generated]
      [used exports unknown]
      CommonJS bailout: module.exports is used directly at 3:0-14
      Statement (VariableDeclaration) with side effects in source code at 1:0-13
      ModuleConcatenation bailout: Module is not an ECMAScript module
      cjs require ./test.js [10] ./index.js 23:23-43
      cjs self exports reference [393] ./test.js 3:0-14
  external "fs" [147] 42 bytes {142} [depth 1] [dependent] [built] [code generated]
    ModuleConcatenation bailout: List of module exports is dynamic (other exports: maybe provided (runtime-defined) and maybe used in bundle0 (runtime-defined))
    cjs require fs [10] ./index.js 1:11-24
  external "path" [17] 42 bytes {142} [depth 1] [dependent] [built] [code generated]
    ModuleConcatenation bailout: List of module exports is dynamic (other exports: maybe provided (runtime-defined) and maybe used in bundle0 (runtime-defined))
    cjs require path [10] ./index.js 2:13-28
chunk {216} (runtime: vendors) vendors.js (vendors) 37 bytes [entry] [rendered]
  > ./vendors.js vendors
  ./vendors.js [53] 37 bytes {216} [depth 0] [built] [code generated]
    [used exports unknown]
    CommonJS bailout: module.exports is used directly at 3:0-14
    Statement (VariableDeclaration) with side effects in source code at 1:0-13
    ModuleConcatenation bailout: Module is not an ECMAScript module
    cjs self exports reference [53] ./vendors.js 3:0-14
    entry ./vendors.js vendors
  

LOG from webpack.Compiler
<t> make hook: 14.878404 ms
<t> finish make hook: 0.022897 ms
<t> finish compilation: 0.202799 ms
<t> seal compilation: 4.605921 ms
<t> afterCompile hook: 0.010945 ms
<t> emitAssets: 1.048911 ms
<t> emitRecords: 0.002474 ms
<t> done hook: 0.010694 ms
<t> beginIdle: 0.006808 ms

LOG from webpack.Compilation
<t> compute affected modules: 0.006011 ms
<t> finish modules: 0.157163 ms
<t> report dependency errors and warnings: 0.024865 ms
<t> optimize dependencies: 0.225475 ms
<t> create chunks: 0.215565 ms
<t> compute affected modules with chunk graph: 0.001746 ms
<t> optimize: 0.783278 ms
    5 modules hashed, 0 from cache (1 variants per module in average)
<t> module hashing: 0.20895 ms
    100% code generated (5 generated, 0 from cache)
<t> code generation: 0.176839 ms
<t> runtime requirements.modules: 0.027753 ms
<t> runtime requirements.chunks: 0.044332 ms
<t> runtime requirements.entries: 0.079158 ms
<t> runtime requirements: 0.17255 ms
<t> hashing: initialize hash: 0.004318 ms
<t> hashing: sort chunks: 0.022786 ms
<t> hashing: hash runtime modules: 0.008134 ms
<t> hashing: hash chunks: 0.351629 ms
<t> hashing: hash digest: 0.015795 ms
<t> hashing: process full hash modules: 0.001523 ms
<t> hashing: 0.440571 ms
    NaN% code generated (0 generated, 0 from cache)
<t> record hash: 0.006396 ms
<t> module assets: 0.012311 ms
<t> create chunk assets: 0.563542 ms
<t> process assets: 1.591522 ms

LOG from webpack.FlagDependencyExportsPlugin
<t> restore cached provided exports: 0.030077 ms
<t> figure out provided exports: 0.032507 ms
    40% of exports of modules have been determined (3 no declared exports, 0 not cached, 2 flagged uncacheable, 0 from cache, 0 from mem cache, 0 additional calculations due to dependencies)
<t> store provided exports into cache: 0.00443 ms

LOG from webpack.InnerGraphPlugin
<t> infer dependency usage: 0.015807 ms

LOG from webpack.SideEffectsFlagPlugin
<t> update dependencies: 0.007207 ms

LOG from webpack.FlagDependencyUsagePlugin
<t> initialize exports usage: 0.005004 ms
<t> trace exports usage in graph: 0.166011 ms

LOG from webpack.buildChunkGraph
<t> visitModules: prepare: 0.014698 ms
<t> visitModules: visiting: 0.072882 ms
    10 queue items processed (5 blocks)
    0 chunk groups connected
    0 chunk groups processed for merging (0 module sets, 0 forked, 0 + 0 modules forked, 0 + 0 modules merged into fork, 0 resulting modules)
    0 chunk group info updated (0 already connected chunk groups reconnected)
<t> visitModules: 0.106209 ms
<t> connectChunkGroups: 0.002389 ms
<t> cleanup: 0.002111 ms

LOG from webpack.SplitChunksPlugin
<t> prepare: 0.02226 ms
<t> modules: 0.09347 ms
<t> queue: 0.003028 ms
<t> maxSize: 0.007404 ms

LOG from webpack.ModuleConcatenationPlugin
<t> select relevant modules: 0.052459 ms
<t> sort relevant modules: 0.000946 ms
<t> find modules to concatenate: 0.001969 ms
<t> sort concat configurations: 0.000941 ms
<t> create concatenated modules: 0.003864 ms
+ 3 hidden lines

LOG from webpack.FileSystemInfo
    3 new snapshots created
    0% root snapshot uncached (0 / 0)
    0% children snapshot uncached (0 / 0)
    0 entries tested
    File info in cache: 3 timestamps 3 hashes 3 timestamp hash combinations
    File timestamp hash combination snapshot optimization: 0% (0/3) entries shared via 0 shared snapshots (0 times referenced)
    Directory info in cache: 0 timestamps 0 hashes 0 timestamp hash combinations
    Managed items info in cache: 0 items

2021-12-05 17:44:49: webpack 5.64.4 compiled successfully in 24 ms (68dc075a8e91635913d3)