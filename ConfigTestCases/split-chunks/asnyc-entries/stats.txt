PublicPath: (none)
asset 125.js 6.52 KiB {125} [emitted]
asset main.js 2.58 KiB {179} [emitted] (name: main)
asset 52.js 496 bytes {52} [emitted]
Entrypoint main 2.58 KiB = main.js
chunk {52} (runtime: a4291b531e90a0ccd153) 52.js 58 bytes <{125}> [rendered]
  > ./chunk ./worker.js 5:25-42
  ./chunk.js [52] 58 bytes {52} [depth 2] [built] [code generated]
    [exports: upper]
    import() ./chunk [125] ./worker.js + 2 modules ./worker.js 5:25-42
chunk {125} (runtime: a4291b531e90a0ccd153) 125.js 300 bytes (javascript) 2.93 KiB (runtime) >{52}< [entry] [rendered]
  > ./index.js 4:16-67
  ./worker.js + 2 modules [125] 300 bytes {125} [depth 1] [not cacheable] [built] [code generated]
    [no exports]
    [no exports used]
    new Worker() ./worker.js [640] ./index.js + 1 modules ./index.js 4:16-67
  webpack/runtime/define property getters 308 bytes {125} [code generated]
    [no exports]
    [used exports unknown]
  webpack/runtime/ensure chunk 326 bytes {125} [code generated]
    [no exports]
    [used exports unknown]
  webpack/runtime/get javascript chunk filename 167 bytes {125} [code generated]
    [no exports]
    [used exports unknown]
  webpack/runtime/hasOwnProperty shorthand 88 bytes {125} [code generated]
    [no exports]
    [used exports unknown]
  webpack/runtime/make namespace object 274 bytes {125} [code generated]
    [no exports]
    [used exports unknown]
  webpack/runtime/readFile chunk loading 1.8 KiB {125} [code generated]
    [no exports]
    [used exports unknown]
chunk {179} (runtime: main) main.js (main) 466 bytes (javascript) 612 bytes (runtime) [entry] [rendered]
  > ./index.js main
  ./index.js + 1 modules [640] 466 bytes {179} [depth 0] [not cacheable] [built] [code generated]
    [no exports]
    [no exports used]
    entry ./index.js main
  webpack/runtime/get javascript chunk filename 167 bytes {179} [code generated]
    [no exports]
    [used exports unknown]
  webpack/runtime/hasOwnProperty shorthand 88 bytes {179} [code generated]
    [no exports]
    [used exports unknown]
  webpack/runtime/publicPath 27 bytes {179} [code generated]
    [no exports]
    [used exports unknown]
  webpack/runtime/readFile chunk loading 330 bytes {179} [code generated]
    [no exports]
    [used exports unknown]
  

LOG from webpack.Compiler
<t> make hook: 16.031641 ms
<t> finish make hook: 0.017688 ms
<t> finish compilation: 0.22986 ms
<t> seal compilation: 12.857798 ms
<t> afterCompile hook: 0.013346 ms
<t> emitAssets: 4.934792 ms
<t> emitRecords: 0.002554 ms
<t> done hook: 0.010721 ms
<t> beginIdle: 0.008209 ms

LOG from webpack.Compilation
<t> compute affected modules: 0.004837 ms
<t> finish modules: 0.160213 ms
<t> report dependency errors and warnings: 0.053512 ms
<t> optimize dependencies: 0.296903 ms
<t> create chunks: 0.604412 ms
<t> compute affected modules with chunk graph: 0.001281 ms
<t> optimize: 1.051059 ms
    3 modules hashed, 0 from cache (0.6 variants per module in average)
<t> module hashing: 0.357408 ms
    100% code generated (3 generated, 0 from cache)
<t> code generation: 5.604533 ms
<t> runtime requirements.modules: 0.104143 ms
<t> runtime requirements.chunks: 0.115377 ms
<t> runtime requirements.entries: 0.911533 ms
<t> runtime requirements: 1.191071 ms
<t> hashing: initialize hash: 0.009921 ms
<t> hashing: sort chunks: 0.495497 ms
<t> hashing: hash runtime modules: 0.983055 ms
<t> hashing: hash chunks: 0.550088 ms
<t> hashing: hash digest: 0.022308 ms
<t> hashing: process full hash modules: 0.002366 ms
<t> hashing: 2.130172 ms
    100% code generated (10 generated, 0 from cache)
<t> record hash: 0.011141 ms
<t> module assets: 0.028186 ms
<t> create chunk assets: 0.764686 ms
<t> process assets: 0.326542 ms

LOG from webpack.FlagDependencyExportsPlugin
<t> restore cached provided exports: 0.022208 ms
<t> figure out provided exports: 0.0508 ms
    100% of exports of modules have been determined (0 no declared exports, 4 not cached, 1 flagged uncacheable, 0 from cache, 0 from mem cache, 0 additional calculations due to dependencies)
<t> store provided exports into cache: 0.02334 ms

LOG from webpack.InnerGraphPlugin
<t> infer dependency usage: 0.018224 ms

LOG from webpack.SideEffectsFlagPlugin
<t> update dependencies: 0.015386 ms

LOG from webpack.FlagDependencyUsagePlugin
<t> initialize exports usage: 0.003469 ms
<t> trace exports usage in graph: 0.23661 ms

LOG from webpack.buildChunkGraph
<t> visitModules: prepare: 0.009931 ms
<t> visitModules: visiting: 0.258564 ms
<t> visitModules: prepare: 0.012109 ms
<t> visitModules: visiting: 0.201396 ms
<t> visitModules: calculating available modules: 0.009777 ms
<t> visitModules: merging available modules: 0.004265 ms
<t> visitModules: check modules for revisit: 0.002707 ms
<t> visitModules: prepare: 0.000796 ms
<t> visitModules: visiting: 0.012642 ms
    14 queue items processed (8 blocks)
    1 chunk groups connected
    1 chunk groups processed for merging (1 module sets, 0 forked, 0 + 0 modules forked, 0 + 0 modules merged into fork, 0 resulting modules)
    1 chunk group info updated (0 already connected chunk groups reconnected)
<t> visitModules: 0.521092 ms
<t> connectChunkGroups: 0.009723 ms
<t> cleanup: 0.001948 ms

LOG from webpack.SplitChunksPlugin
<t> prepare: 0.017337 ms
<t> modules: 0.077066 ms
<t> queue: 0.001906 ms
<t> maxSize: 0.010104 ms

LOG from webpack.ModuleConcatenationPlugin
<t> select relevant modules: 0.051832 ms
<t> sort relevant modules: 0.002629 ms
<t> find modules to concatenate: 0.134977 ms
<t> sort concat configurations: 0.00346 ms
<t> create concatenated modules: 0.249067 ms
+ 3 hidden lines

LOG from webpack.FileSystemInfo
    4 new snapshots created
    0% root snapshot uncached (0 / 0)
    0% children snapshot uncached (0 / 0)
    0 entries tested
    File info in cache: 4 timestamps 4 hashes 4 timestamp hash combinations
    File timestamp hash combination snapshot optimization: 0% (0/4) entries shared via 0 shared snapshots (0 times referenced)
    Directory info in cache: 0 timestamps 0 hashes 0 timestamp hash combinations
    Managed items info in cache: 0 items

2021-12-05 17:44:58: webpack 5.64.4 compiled successfully in 35 ms (9557fbd1659447b78f4e)